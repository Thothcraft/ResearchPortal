{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/components/SensorChart.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useRef } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ChartOptions,\n  ChartData\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface SensorChartProps {\n  data: {\n    labels: string[];\n    datasets: {\n      label: string;\n      data: number[];\n      borderColor: string;\n      backgroundColor: string;\n    }[];\n  };\n  title: string;\n  yAxisLabel?: string;\n}\n\nexport default function SensorChart({ data, title, yAxisLabel = 'Value' }: SensorChartProps) {\n  const options: ChartOptions<'line'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n        labels: {\n          color: '#fff',\n          font: {\n            size: 12\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: title,\n        color: '#fff',\n        font: {\n          size: 16,\n          weight: 'bold'\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        titleColor: '#fff',\n        bodyColor: '#fff',\n        borderColor: 'rgba(255, 255, 255, 0.2)',\n        borderWidth: 1\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        },\n        ticks: {\n          color: '#fff',\n          font: {\n            size: 11\n          }\n        }\n      },\n      y: {\n        grid: {\n          color: 'rgba(255, 255, 255, 0.1)'\n        },\n        ticks: {\n          color: '#fff',\n          font: {\n            size: 11\n          }\n        },\n        title: {\n          display: true,\n          text: yAxisLabel,\n          color: '#fff',\n          font: {\n            size: 12\n          }\n        }\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    }\n  };\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20 shadow-xl h-full\">\n      <div className=\"h-[300px]\">\n        <Line options={options} data={data} />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAYA;AAfA;;;;AAiBA,8BAA8B;AAC9B,+JAAA,CAAA,QAAO,CAAC,QAAQ,CACd,+JAAA,CAAA,gBAAa,EACb,+JAAA,CAAA,cAAW,EACX,+JAAA,CAAA,eAAY,EACZ,+JAAA,CAAA,cAAW,EACX,+JAAA,CAAA,QAAK,EACL,+JAAA,CAAA,UAAO,EACP,+JAAA,CAAA,SAAM;AAiBO,SAAS,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,aAAa,OAAO,EAAoB;IACzF,MAAM,UAAgC;QACpC,YAAY;QACZ,qBAAqB;QACrB,SAAS;YACP,QAAQ;gBACN,UAAU;gBACV,QAAQ;oBACN,OAAO;oBACP,MAAM;wBACJ,MAAM;oBACR;gBACF;YACF;YACA,OAAO;gBACL,SAAS;gBACT,MAAM;gBACN,OAAO;gBACP,MAAM;oBACJ,MAAM;oBACN,QAAQ;gBACV;YACF;YACA,SAAS;gBACP,MAAM;gBACN,WAAW;gBACX,iBAAiB;gBACjB,YAAY;gBACZ,WAAW;gBACX,aAAa;gBACb,aAAa;YACf;QACF;QACA,QAAQ;YACN,GAAG;gBACD,MAAM;oBACJ,OAAO;gBACT;gBACA,OAAO;oBACL,OAAO;oBACP,MAAM;wBACJ,MAAM;oBACR;gBACF;YACF;YACA,GAAG;gBACD,MAAM;oBACJ,OAAO;gBACT;gBACA,OAAO;oBACL,OAAO;oBACP,MAAM;wBACJ,MAAM;oBACR;gBACF;gBACA,OAAO;oBACL,SAAS;oBACT,MAAM;oBACN,OAAO;oBACP,MAAM;wBACJ,MAAM;oBACR;gBACF;YACF;QACF;QACA,aAAa;YACX,MAAM;YACN,MAAM;YACN,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC,yJAAA,CAAA,OAAI;gBAAC,SAAS;gBAAS,MAAM;;;;;;;;;;;;;;;;AAItC;KA/EwB","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/services/api.ts"],"sourcesContent":["/**\n * API Service for Research Portal\n * Handles all communication with Brain backend\n */\n\nimport axios from 'axios';\nimport io, { Socket } from 'socket.io-client';\n\n// API Configuration\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'https://web-production-d7d37.up.railway.app';\nconst WS_URL = process.env.NEXT_PUBLIC_WS_URL || 'wss://web-production-d7d37.up.railway.app';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.code === 'ERR_NETWORK') {\n      console.warn('Network error - using mock data');\n      // Return mock data for network errors\n      return Promise.resolve({\n        data: {\n          success: true,\n          message: 'Using mock data (network unavailable)',\n          data: {}\n        }\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Types\nexport interface SensorData {\n  temperature: number;\n  humidity: number;\n  pressure: number;\n  orientation: {\n    pitch: number;\n    roll: number;\n    yaw: number;\n  };\n  acceleration: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  compass: number;\n  timestamp: string;\n  device_id: string;\n}\n\nexport interface DeviceInfo {\n  device_id: string;\n  name: string;\n  status: 'online' | 'offline' | 'idle';\n  battery_level?: number;\n  last_seen: string;\n  location?: string;\n  sensors_enabled: boolean;\n}\n\nexport interface TrainingJob {\n  job_id: string;\n  model: string;\n  status: string;\n  progress: string;\n  created_at: string;\n  best_accuracy?: number;\n}\n\nexport interface FederatedSession {\n  session_id: string;\n  session_name: string;\n  status: string;\n  progress: string;\n  clients: number;\n  created_at: string;\n}\n\n// API Service\nclass ApiService {\n  private socket: Socket | null = null;\n\n  // Authentication\n  async login(email: string, password: string) {\n    const response = await api.post('/token', { email, password });\n    if (response.data.access_token) {\n      localStorage.setItem('auth_token', response.data.access_token);\n    }\n    return response.data;\n  }\n\n  async register(email: string, password: string, role: string = 'researcher') {\n    const response = await api.post('/register', { email, password, role });\n    return response.data;\n  }\n\n  async getProfile() {\n    const response = await api.get('/profile');\n    return response.data;\n  }\n\n  async updateProfile(data: any) {\n    const response = await api.put('/profile', data);\n    return response.data;\n  }\n\n  // System\n  async getHealth() {\n    const response = await api.get('/health');\n    return response.data;\n  }\n\n  // ============================================\n  // Device Management\n  // ============================================\n\n  /**\n   * Get all registered devices for the current user\n   */\n  async getDevices() {\n    const response = await api.get('/device/list');\n    return response.data;\n  }\n\n  /**\n   * Register a new device\n   */\n  async registerDevice(deviceData: {\n    device_id: string;\n    device_name?: string;\n    device_type?: string;\n    hardware_info?: Record<string, any>;\n  }) {\n    const response = await api.post('/device/register', deviceData);\n    return response.data;\n  }\n\n  /**\n   * Update device information\n   */\n  async updateDevice(deviceId: string, data: any) {\n    const response = await api.put(`/device/${deviceId}`, data);\n    return response.data;\n  }\n\n  /**\n   * Get detailed status of a specific device\n   */\n  async getDeviceStatus(deviceId: string) {\n    const response = await api.get(`/device/${deviceId}/status`);\n    return response.data;\n  }\n\n  /**\n   * Delete a device\n   */\n  async deleteDevice(deviceId: string) {\n    const response = await api.delete(`/device/${deviceId}`);\n    return response.data;\n  }\n\n  // Sensors\n  async getCurrentSensorData(deviceId: string = 'thoth-001'): Promise<SensorData> {\n    const response = await api.get(`/sensors/current?device_id=${deviceId}`);\n    return response.data;\n  }\n\n  async controlSensors(deviceId: string, config: any) {\n    const response = await api.post('/sensors/control', {\n      device_id: deviceId,\n      ...config\n    });\n    return response.data;\n  }\n\n  async getSensorHistory(params: {\n    device_id?: string;\n    limit?: number;\n    offset?: number;\n    start_time?: string;\n    end_time?: string;\n  }) {\n    const response = await api.get('/sensors/history', { params });\n    return response.data;\n  }\n\n  async getSensorStats(deviceId: string, period: string = '1h') {\n    const response = await api.get(`/sensors/stats?device_id=${deviceId}&period=${period}`);\n    return response.data;\n  }\n\n  // WebSocket for live sensor streaming\n  connectToSensorStream(deviceId: string, onData: (data: SensorData) => void) {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n\n    // For now, simulate WebSocket data since the backend WebSocket might not be available\n    // In production, you would use the actual WebSocket connection\n    const simulateData = () => {\n      const mockData: SensorData = {\n        temperature: 20 + Math.random() * 10,\n        humidity: 40 + Math.random() * 20,\n        pressure: 1013 + Math.random() * 20,\n        orientation: {\n          pitch: Math.random() * 360 - 180,\n          roll: Math.random() * 360 - 180,\n          yaw: Math.random() * 360\n        },\n        acceleration: {\n          x: Math.random() * 4 - 2,\n          y: Math.random() * 4 - 2,\n          z: Math.random() * 4 - 2\n        },\n        compass: Math.random() * 360,\n        timestamp: new Date().toISOString(),\n        device_id: deviceId\n      };\n      onData(mockData);\n    };\n\n    // Simulate real-time data every 2 seconds\n    const interval = setInterval(simulateData, 2000);\n    \n    // Return a mock socket object\n    return {\n      disconnect: () => clearInterval(interval),\n      on: () => {},\n      emit: () => {}\n    } as any;\n  }\n\n  disconnectSensorStream() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  // Devices\n  async getDevices() {\n    const response = await api.get('/device/list');\n    return response.data;\n  }\n\n  async registerDevice(deviceData: any) {\n    const response = await api.post('/device/register', deviceData);\n    return response.data;\n  }\n\n  async updateDevice(deviceId: string, data: any) {\n    const response = await api.put(`/device/${deviceId}`, data);\n    return response.data;\n  }\n\n  async getDeviceStatus(deviceId: string) {\n    const response = await api.get(`/device/${deviceId}/status`);\n    return response.data;\n  }\n\n  // Network\n  async configureWifi(ssid: string, password: string, security: string = 'WPA2') {\n    const response = await api.post('/network/wifi', {\n      ssid,\n      password,\n      security,\n      auto_connect: true\n    });\n    return response.data;\n  }\n\n  async getNetworkStatus(networkInterface: string = 'wlan0') {\n    const response = await api.get(`/network/status?interface=${networkInterface}`);\n    return response.data;\n  }\n\n  async scanNetworks() {\n    const response = await api.get('/network/scan');\n    return response.data;\n  }\n\n  // Training\n  async setupTraining(config: {\n    model: string;\n    data: string;\n    mode: string;\n    epochs?: number;\n    batch_size?: number;\n    learning_rate?: number;\n    device_id?: string;\n  }) {\n    const response = await api.post('/training/training/setup', config);\n    return response.data;\n  }\n\n  async getTrainingStatus(jobId?: string): Promise<TrainingJob | { jobs: TrainingJob[] }> {\n    const url = jobId ? `/training/training/status?job_id=${jobId}` : '/training/training/status';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  async controlTraining(jobId: string, action: 'pause' | 'resume' | 'cancel') {\n    const response = await api.post(`/training/training/${jobId}/control?action=${action}`);\n    return response.data;\n  }\n\n  async getTrainedModels(deviceId?: string) {\n    const url = deviceId ? `/training/training/models?device_id=${deviceId}` : '/training/training/models';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  // Federated Learning\n  async startFederatedTraining(config: {\n    session_name: string;\n    num_rounds: number;\n    min_clients: number;\n    max_clients?: number;\n    differential_privacy?: boolean;\n    noise_multiplier?: number;\n    model_config: any;\n  }) {\n    const response = await api.post('/training/federated/train', config);\n    return response.data;\n  }\n\n  async getFederatedStatus(sessionId?: string): Promise<FederatedSession | { sessions: FederatedSession[] }> {\n    const url = sessionId ? `/training/federated/status?session_id=${sessionId}` : '/training/federated/status';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  async joinFederatedSession(sessionId: string, deviceId: string, dataSamples: number) {\n    const response = await api.post(`/training/federated/${sessionId}/join`, null, {\n      params: {\n        device_id: deviceId,\n        data_samples: dataSamples\n      }\n    });\n    return response.data;\n  }\n\n  // Data\n  async uploadData(formData: FormData) {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  }\n\n  async downloadFile(fileId: string) {\n    const response = await api.get(`/download/${fileId}`, {\n      responseType: 'blob',\n    });\n    return response.data;\n  }\n\n  async queryData(query: string) {\n    const response = await api.post('/query', { query });\n    return response.data;\n  }\n\n  // Files\n  async syncFiles(path: string) {\n    const response = await api.post('/file/sync', { path });\n    return response.data;\n  }\n\n  async listFiles() {\n    const response = await api.get('/file/list');\n    return response.data;\n  }\n}\n\n// Export singleton instance\nexport const apiService = new ApiService();\nexport default apiService;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/data/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Download, Calendar, Database, TrendingUp, RefreshCw } from 'lucide-react';\nimport SensorChart from '../components/SensorChart';\nimport apiService, { SensorData } from '../services/api';\nimport { format } from 'date-fns';\n\nexport default function DataPage() {\n  const [sensorData, setSensorData] = useState<SensorData | null>(null);\n  const [historicalData, setHistoricalData] = useState<any[]>([]);\n  const [selectedDevice, setSelectedDevice] = useState('thoth-001');\n  const [timeRange, setTimeRange] = useState('1h');\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Chart data\n  const [temperatureChartData, setTemperatureChartData] = useState({\n    labels: [] as string[],\n    datasets: [{\n      label: 'Temperature (°C)',\n      data: [] as number[],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n    }]\n  });\n\n  const [humidityChartData, setHumidityChartData] = useState({\n    labels: [] as string[],\n    datasets: [{\n      label: 'Humidity (%)',\n      data: [] as number[],\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\n    }]\n  });\n\n  const [pressureChartData, setPressureChartData] = useState({\n    labels: [] as string[],\n    datasets: [{\n      label: 'Pressure (mbar)',\n      data: [] as number[],\n      borderColor: 'rgb(75, 192, 192)',\n      backgroundColor: 'rgba(75, 192, 192, 0.5)',\n    }]\n  });\n\n  const [motionChartData, setMotionChartData] = useState({\n    labels: [] as string[],\n    datasets: [\n      {\n        label: 'Pitch',\n        data: [] as number[],\n        borderColor: 'rgb(255, 206, 86)',\n        backgroundColor: 'rgba(255, 206, 86, 0.5)',\n      },\n      {\n        label: 'Roll',\n        data: [] as number[],\n        borderColor: 'rgb(153, 102, 255)',\n        backgroundColor: 'rgba(153, 102, 255, 0.5)',\n      },\n      {\n        label: 'Yaw',\n        data: [] as number[],\n        borderColor: 'rgb(255, 159, 64)',\n        backgroundColor: 'rgba(255, 159, 64, 0.5)',\n      }\n    ]\n  });\n\n  useEffect(() => {\n    fetchCurrentData();\n    fetchHistoricalData();\n  }, [selectedDevice, timeRange]);\n\n  useEffect(() => {\n    if (isStreaming) {\n      const socket = apiService.connectToSensorStream(selectedDevice, handleStreamData);\n      return () => {\n        apiService.disconnectSensorStream();\n      };\n    }\n  }, [isStreaming, selectedDevice]);\n\n  const fetchCurrentData = async () => {\n    try {\n      const data = await apiService.getCurrentSensorData(selectedDevice);\n      setSensorData(data);\n    } catch (error) {\n      console.error('Failed to fetch sensor data:', error);\n    }\n  };\n\n  const fetchHistoricalData = async () => {\n    try {\n      setLoading(true);\n      const history = await apiService.getSensorHistory({\n        device_id: selectedDevice,\n        limit: 100\n      });\n      \n      if (history.data && history.data.length > 0) {\n        setHistoricalData(history.data);\n        updateCharts(history.data);\n      }\n    } catch (error) {\n      console.error('Failed to fetch historical data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStreamData = (data: SensorData) => {\n    setSensorData(data);\n    \n    // Update charts with streaming data\n    const timestamp = format(new Date(data.timestamp), 'HH:mm:ss');\n    \n    // Update temperature chart\n    setTemperatureChartData(prev => ({\n      labels: [...prev.labels.slice(-19), timestamp],\n      datasets: [{\n        ...prev.datasets[0],\n        data: [...prev.datasets[0].data.slice(-19), data.temperature]\n      }]\n    }));\n\n    // Update humidity chart\n    setHumidityChartData(prev => ({\n      labels: [...prev.labels.slice(-19), timestamp],\n      datasets: [{\n        ...prev.datasets[0],\n        data: [...prev.datasets[0].data.slice(-19), data.humidity]\n      }]\n    }));\n\n    // Update pressure chart\n    setPressureChartData(prev => ({\n      labels: [...prev.labels.slice(-19), timestamp],\n      datasets: [{\n        ...prev.datasets[0],\n        data: [...prev.datasets[0].data.slice(-19), data.pressure]\n      }]\n    }));\n\n    // Update motion chart\n    setMotionChartData(prev => ({\n      labels: [...prev.labels.slice(-19), timestamp],\n      datasets: [\n        {\n          ...prev.datasets[0],\n          data: [...prev.datasets[0].data.slice(-19), data.orientation.pitch]\n        },\n        {\n          ...prev.datasets[1],\n          data: [...prev.datasets[1].data.slice(-19), data.orientation.roll]\n        },\n        {\n          ...prev.datasets[2],\n          data: [...prev.datasets[2].data.slice(-19), data.orientation.yaw]\n        }\n      ]\n    }));\n  };\n\n  const updateCharts = (data: any[]) => {\n    const labels = data.map(d => format(new Date(d.timestamp), 'HH:mm'));\n    \n    setTemperatureChartData({\n      labels,\n      datasets: [{\n        label: 'Temperature (°C)',\n        data: data.map(d => d.temperature),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      }]\n    });\n\n    setHumidityChartData({\n      labels,\n      datasets: [{\n        label: 'Humidity (%)',\n        data: data.map(d => d.humidity),\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      }]\n    });\n\n    setPressureChartData({\n      labels,\n      datasets: [{\n        label: 'Pressure (mbar)',\n        data: data.map(d => d.pressure),\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n      }]\n    });\n\n    setMotionChartData({\n      labels,\n      datasets: [\n        {\n          label: 'Pitch',\n          data: data.map(d => d.orientation?.pitch || 0),\n          borderColor: 'rgb(255, 206, 86)',\n          backgroundColor: 'rgba(255, 206, 86, 0.5)',\n        },\n        {\n          label: 'Roll',\n          data: data.map(d => d.orientation?.roll || 0),\n          borderColor: 'rgb(153, 102, 255)',\n          backgroundColor: 'rgba(153, 102, 255, 0.5)',\n        },\n        {\n          label: 'Yaw',\n          data: data.map(d => d.orientation?.yaw || 0),\n          borderColor: 'rgb(255, 159, 64)',\n          backgroundColor: 'rgba(255, 159, 64, 0.5)',\n        }\n      ]\n    });\n  };\n\n  const handleDownload = async (format: 'csv' | 'json') => {\n    try {\n      const data = historicalData;\n      let content: string;\n      let filename: string;\n      let type: string;\n\n      if (format === 'csv') {\n        // Convert to CSV\n        const headers = ['timestamp', 'temperature', 'humidity', 'pressure', 'pitch', 'roll', 'yaw'];\n        const csv = [\n          headers.join(','),\n          ...data.map(d => [\n            d.timestamp,\n            d.temperature,\n            d.humidity,\n            d.pressure,\n            d.orientation?.pitch || 0,\n            d.orientation?.roll || 0,\n            d.orientation?.yaw || 0\n          ].join(','))\n        ].join('\\n');\n        \n        content = csv;\n        filename = `sensor_data_${selectedDevice}_${Date.now()}.csv`;\n        type = 'text/csv';\n      } else {\n        // JSON format\n        content = JSON.stringify(data, null, 2);\n        filename = `sensor_data_${selectedDevice}_${Date.now()}.json`;\n        type = 'application/json';\n      }\n\n      // Create download link\n      const blob = new Blob([content], { type });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      a.click();\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Failed to download data:', error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mb-8\"\n        >\n          <h1 className=\"text-4xl font-bold text-white mb-2\">Sensor Data</h1>\n          <p className=\"text-gray-300\">Real-time monitoring and historical analysis</p>\n        </motion.div>\n\n        {/* Controls */}\n        <motion.div\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n          className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 mb-6 border border-white/20\"\n        >\n          <div className=\"flex flex-col md:flex-row gap-4\">\n            {/* Device Selector */}\n            <select\n              value={selectedDevice}\n              onChange={(e) => setSelectedDevice(e.target.value)}\n              className=\"px-4 py-2 bg-white/10 border border-white/20 rounded-lg text-white focus:outline-none focus:border-blue-400\"\n            >\n              <option value=\"thoth-001\">Thoth Alpha</option>\n              <option value=\"thoth-002\">Thoth Beta</option>\n              <option value=\"thoth-003\">Thoth Gamma</option>\n            </select>\n\n            {/* Time Range */}\n            <select\n              value={timeRange}\n              onChange={(e) => setTimeRange(e.target.value)}\n              className=\"px-4 py-2 bg-white/10 border border-white/20 rounded-lg text-white focus:outline-none focus:border-blue-400\"\n            >\n              <option value=\"1h\">Last Hour</option>\n              <option value=\"24h\">Last 24 Hours</option>\n              <option value=\"7d\">Last 7 Days</option>\n              <option value=\"30d\">Last 30 Days</option>\n            </select>\n\n            {/* Stream Toggle */}\n            <button\n              onClick={() => setIsStreaming(!isStreaming)}\n              className={`px-4 py-2 rounded-lg font-medium transition-colors flex items-center gap-2 ${\n                isStreaming\n                  ? 'bg-red-500/20 hover:bg-red-500/30 text-red-400'\n                  : 'bg-green-500/20 hover:bg-green-500/30 text-green-400'\n              }`}\n            >\n              <div className={`w-2 h-2 rounded-full ${isStreaming ? 'bg-red-400 animate-pulse' : 'bg-gray-400'}`} />\n              {isStreaming ? 'Stop Stream' : 'Start Stream'}\n            </button>\n\n            {/* Refresh */}\n            <button\n              onClick={() => {\n                fetchCurrentData();\n                fetchHistoricalData();\n              }}\n              className=\"px-4 py-2 bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 rounded-lg font-medium transition-colors flex items-center gap-2\"\n            >\n              <RefreshCw className=\"w-4 h-4\" />\n              Refresh\n            </button>\n\n            {/* Download */}\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => handleDownload('csv')}\n                className=\"px-4 py-2 bg-purple-500/20 hover:bg-purple-500/30 text-purple-400 rounded-lg font-medium transition-colors flex items-center gap-2\"\n              >\n                <Download className=\"w-4 h-4\" />\n                CSV\n              </button>\n              <button\n                onClick={() => handleDownload('json')}\n                className=\"px-4 py-2 bg-purple-500/20 hover:bg-purple-500/30 text-purple-400 rounded-lg font-medium transition-colors flex items-center gap-2\"\n              >\n                <Download className=\"w-4 h-4\" />\n                JSON\n              </button>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Current Values */}\n        {sensorData && (\n          <motion.div\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.2 }}\n            className=\"grid grid-cols-2 md:grid-cols-6 gap-4 mb-6\"\n          >\n            <div className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 border border-white/20\">\n              <p className=\"text-gray-400 text-sm mb-1\">Temperature</p>\n              <p className=\"text-2xl font-bold text-red-400\">{sensorData.temperature.toFixed(1)}°C</p>\n            </div>\n            <div className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 border border-white/20\">\n              <p className=\"text-gray-400 text-sm mb-1\">Humidity</p>\n              <p className=\"text-2xl font-bold text-blue-400\">{sensorData.humidity.toFixed(1)}%</p>\n            </div>\n            <div className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 border border-white/20\">\n              <p className=\"text-gray-400 text-sm mb-1\">Pressure</p>\n              <p className=\"text-2xl font-bold text-green-400\">{sensorData.pressure.toFixed(0)} mb</p>\n            </div>\n            <div className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 border border-white/20\">\n              <p className=\"text-gray-400 text-sm mb-1\">Pitch</p>\n              <p className=\"text-2xl font-bold text-yellow-400\">{sensorData.orientation.pitch.toFixed(1)}°</p>\n            </div>\n            <div className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 border border-white/20\">\n              <p className=\"text-gray-400 text-sm mb-1\">Roll</p>\n              <p className=\"text-2xl font-bold text-purple-400\">{sensorData.orientation.roll.toFixed(1)}°</p>\n            </div>\n            <div className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 border border-white/20\">\n              <p className=\"text-gray-400 text-sm mb-1\">Compass</p>\n              <p className=\"text-2xl font-bold text-orange-400\">{sensorData.compass.toFixed(0)}°</p>\n            </div>\n          </motion.div>\n        )}\n\n        {/* Charts */}\n        {loading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white\"></div>\n          </div>\n        ) : (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.3 }}\n            className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\"\n          >\n            <SensorChart\n              data={temperatureChartData}\n              title=\"Temperature Over Time\"\n              yAxisLabel=\"Temperature (°C)\"\n            />\n            <SensorChart\n              data={humidityChartData}\n              title=\"Humidity Over Time\"\n              yAxisLabel=\"Humidity (%)\"\n            />\n            <SensorChart\n              data={pressureChartData}\n              title=\"Pressure Over Time\"\n              yAxisLabel=\"Pressure (mbar)\"\n            />\n            <SensorChart\n              data={motionChartData}\n              title=\"Motion (Orientation) Over Time\"\n              yAxisLabel=\"Degrees\"\n            />\n          </motion.div>\n        )}\n\n        {/* Data Table */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.4 }}\n          className=\"mt-6 bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20\"\n        >\n          <h2 className=\"text-xl font-semibold text-white mb-4\">Historical Data</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full text-sm text-left text-gray-300\">\n              <thead className=\"text-xs uppercase bg-black/20\">\n                <tr>\n                  <th className=\"px-4 py-2\">Timestamp</th>\n                  <th className=\"px-4 py-2\">Temperature</th>\n                  <th className=\"px-4 py-2\">Humidity</th>\n                  <th className=\"px-4 py-2\">Pressure</th>\n                  <th className=\"px-4 py-2\">Pitch</th>\n                  <th className=\"px-4 py-2\">Roll</th>\n                  <th className=\"px-4 py-2\">Yaw</th>\n                </tr>\n              </thead>\n              <tbody>\n                {historicalData.slice(0, 10).map((data, index) => (\n                  <tr key={index} className=\"border-b border-white/10\">\n                    <td className=\"px-4 py-2\">{format(new Date(data.timestamp), 'yyyy-MM-dd HH:mm:ss')}</td>\n                    <td className=\"px-4 py-2\">{data.temperature?.toFixed(1)}°C</td>\n                    <td className=\"px-4 py-2\">{data.humidity?.toFixed(1)}%</td>\n                    <td className=\"px-4 py-2\">{data.pressure?.toFixed(0)} mb</td>\n                    <td className=\"px-4 py-2\">{data.orientation?.pitch?.toFixed(1)}°</td>\n                    <td className=\"px-4 py-2\">{data.orientation?.roll?.toFixed(1)}°</td>\n                    <td className=\"px-4 py-2\">{data.orientation?.yaw?.toFixed(1)}°</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}