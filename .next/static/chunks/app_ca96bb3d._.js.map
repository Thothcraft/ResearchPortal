{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/services/api.ts"],"sourcesContent":["/**\n * API Service for Research Portal\n * Handles all communication with Brain backend\n */\n\nimport axios from 'axios';\nimport io, { Socket } from 'socket.io-client';\n\n// API Configuration\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'https://web-production-d7d37.up.railway.app';\nconst WS_URL = process.env.NEXT_PUBLIC_WS_URL || 'wss://web-production-d7d37.up.railway.app';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.code === 'ERR_NETWORK') {\n      console.warn('Network error - using mock data');\n      // Return mock data for network errors\n      return Promise.resolve({\n        data: {\n          success: true,\n          message: 'Using mock data (network unavailable)',\n          data: {}\n        }\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Types\nexport interface SensorData {\n  temperature: number;\n  humidity: number;\n  pressure: number;\n  orientation: {\n    pitch: number;\n    roll: number;\n    yaw: number;\n  };\n  acceleration: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  compass: number;\n  timestamp: string;\n  device_id: string;\n}\n\nexport interface DeviceInfo {\n  device_id: string;\n  name: string;\n  status: 'online' | 'offline' | 'idle';\n  battery_level?: number;\n  last_seen: string;\n  location?: string;\n  sensors_enabled: boolean;\n}\n\nexport interface TrainingJob {\n  job_id: string;\n  model: string;\n  status: string;\n  progress: string;\n  created_at: string;\n  best_accuracy?: number;\n}\n\nexport interface FederatedSession {\n  session_id: string;\n  session_name: string;\n  status: string;\n  progress: string;\n  clients: number;\n  created_at: string;\n}\n\n// API Service\nclass ApiService {\n  private socket: Socket | null = null;\n\n  // Authentication\n  async login(username: string, password: string) {\n    try {\n      const response = await api.post('/token', {\n        username,\n        password,\n        grant_type: 'password'\n      });\n    \n      if (response.data.access_token) {\n        localStorage.setItem('auth_token', response.data.access_token);\n        // Set default auth header for subsequent requests\n        api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access_token}`;\n      }\n      return response.data;\n    } catch (error: any) {\n      console.error('Login error:', error);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        throw new Error(error.response.data.detail || 'Login failed');\n      } else if (error.request) {\n        // The request was made but no response was received\n        throw new Error('No response from server. Please check your connection.');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        throw new Error('Error setting up login request');\n      }\n    }\n  }\n\n  async register(username: string, password: string, phone: string, role: string = 'researcher') {\n    const response = await api.post('/register', { \n      username, \n      password, \n      phone_number: phone,\n      role \n    });\n    return response.data;\n  }\n\n  async getProfile() {\n    const response = await api.get('/profile');\n    return response.data;\n  }\n\n  async updateProfile(data: any) {\n    const response = await api.put('/profile', data);\n    return response.data;\n  }\n\n  // System\n  async getHealth() {\n    const response = await api.get('/health');\n    return response.data;\n  }\n\n  // ============================================\n  // Device Management\n  // ============================================\n\n  /**\n   * Get all registered devices for the current user\n   */\n  async getDevices() {\n    const response = await api.get('/device/list');\n    return response.data;\n  }\n\n  /**\n   * Register a new device\n   */\n  async registerDevice(deviceData: {\n    device_id: string;\n    device_name?: string;\n    device_type?: string;\n    hardware_info?: Record<string, any>;\n  }) {\n    const response = await api.post('/device/register', deviceData);\n    return response.data;\n  }\n\n  /**\n   * Update device information\n   */\n  async updateDevice(deviceId: string, data: any) {\n    const response = await api.put(`/device/${deviceId}`, data);\n    return response.data;\n  }\n\n  /**\n   * Get detailed status of a specific device\n   */\n  async getDeviceStatus(deviceId: string) {\n    const response = await api.get(`/device/${deviceId}/status`);\n    return response.data;\n  }\n\n  /**\n   * Delete a device\n   */\n  async deleteDevice(deviceId: string) {\n    const response = await api.delete(`/device/${deviceId}`);\n    return response.data;\n  }\n\n  // Sensors\n  async getCurrentSensorData(deviceId: string = 'thoth-001'): Promise<SensorData> {\n    const response = await api.get(`/sensors/current?device_id=${deviceId}`);\n    return response.data;\n  }\n\n  async controlSensors(deviceId: string, config: any) {\n    const response = await api.post('/sensors/control', {\n      device_id: deviceId,\n      ...config\n    });\n    return response.data;\n  }\n\n  async getSensorHistory(params: {\n    device_id?: string;\n    limit?: number;\n    offset?: number;\n    start_time?: string;\n    end_time?: string;\n  }) {\n    const response = await api.get('/sensors/history', { params });\n    return response.data;\n  }\n\n  async getSensorStats(deviceId: string, period: string = '1h') {\n    const response = await api.get(`/sensors/stats?device_id=${deviceId}&period=${period}`);\n    return response.data;\n  }\n\n  // WebSocket for live sensor streaming\n  private onDataCallback: ((data: SensorData) => void) | null = null;\n  private simulationInterval: NodeJS.Timeout | null = null;\n\n  connectToSensorStream(deviceId: string, onData: (data: SensorData) => void) {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n\n    this.onDataCallback = onData;\n    \n    // In production, you would connect to the actual WebSocket\n    // this.socket = io(`${WS_URL}?deviceId=${deviceId}`, {\n    //   auth: { token: localStorage.getItem('auth_token') }\n    // });\n    // \n    // this.socket.on('sensor_data', (data: SensorData) => {\n    //   this.onDataCallback?.(data);\n    // });\n    \n    // For now, simulate WebSocket data\n    this.simulateData();\n    \n    return () => {\n      this.disconnectSensorStream();\n    };\n  }\n\n  private simulateData() {\n    // Clear any existing simulation\n    if (this.simulationInterval) {\n      clearInterval(this.simulationInterval);\n    }\n    \n    this.simulationInterval = setInterval(() => {\n      if (!this.onDataCallback) return;\n      \n      const mockData: SensorData = {\n        temperature: 25 + Math.random() * 5,\n        humidity: 40 + Math.random() * 20,\n        pressure: 1000 + Math.random() * 20,\n        orientation: {\n          pitch: Math.random() * 360 - 180,\n          roll: Math.random() * 360 - 180,\n          yaw: Math.random() * 360 - 180,\n        },\n        acceleration: {\n          x: Math.random() * 2 - 1,\n          y: Math.random() * 2 - 1,\n          z: 9.8 + Math.random() * 0.2 - 0.1,\n        },\n        compass: Math.random() * 360,\n        timestamp: new Date().toISOString(),\n        device_id: 'simulated-device',\n      };\n      \n      this.onDataCallback?.(mockData);\n    }, 1000);\n  }\n  \n  disconnectSensorStream() {\n    if (this.simulationInterval) {\n      clearInterval(this.simulationInterval);\n      this.simulationInterval = null;\n    }\n    \n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n    \n    this.onDataCallback = null;\n  }\n\n  // Network\n  async configureWifi(ssid: string, password: string, security: string = 'WPA2') {\n    const response = await api.post('/network/wifi', {\n      ssid,\n      password,\n      security,\n      auto_connect: true\n    });\n    return response.data;\n  }\n\n  async getNetworkStatus(networkInterface: string = 'wlan0') {\n    const response = await api.get(`/network/status?interface=${networkInterface}`);\n    return response.data;\n  }\n\n  async scanNetworks() {\n    const response = await api.get('/network/scan');\n    return response.data;\n  }\n\n  // Training\n  async setupTraining(config: {\n    model: string;\n    data: string;\n    mode: string;\n    epochs?: number;\n    batch_size?: number;\n    learning_rate?: number;\n    device_id?: string;\n  }) {\n    const response = await api.post('/training/training/setup', config);\n    return response.data;\n  }\n\n  async getTrainingStatus(jobId?: string): Promise<TrainingJob | { jobs: TrainingJob[] }> {\n    const url = jobId ? `/training/training/status?job_id=${jobId}` : '/training/training/status';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  async controlTraining(jobId: string, action: 'pause' | 'resume' | 'cancel') {\n    const response = await api.post(`/training/training/${jobId}/control?action=${action}`);\n    return response.data;\n  }\n\n  async getTrainedModels(deviceId?: string) {\n    const url = deviceId ? `/training/training/models?device_id=${deviceId}` : '/training/training/models';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  // Federated Learning\n  async startFederatedTraining(config: {\n    session_name: string;\n    num_rounds: number;\n    min_clients: number;\n    max_clients?: number;\n    differential_privacy?: boolean;\n    noise_multiplier?: number;\n    model_config: any;\n  }) {\n    const response = await api.post('/training/federated/train', config);\n    return response.data;\n  }\n\n  async getFederatedStatus(sessionId?: string): Promise<FederatedSession | { sessions: FederatedSession[] }> {\n    const url = sessionId ? `/training/federated/status?session_id=${sessionId}` : '/training/federated/status';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  async joinFederatedSession(sessionId: string, deviceId: string, dataSamples: number) {\n    const response = await api.post(`/training/federated/${sessionId}/join`, null, {\n      params: {\n        device_id: deviceId,\n        data_samples: dataSamples\n      }\n    });\n    return response.data;\n  }\n\n  // Data\n  async uploadData(formData: FormData) {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  }\n\n  async downloadFile(fileId: string) {\n    const response = await api.get(`/download/${fileId}`, {\n      responseType: 'blob',\n    });\n    return response.data;\n  }\n\n  async queryData(query: string) {\n    const response = await api.post('/query', { query });\n    return response.data;\n  }\n\n  // Files\n  async syncFiles(path: string) {\n    const response = await api.post('/file/sync', { path });\n    return response.data;\n  }\n\n  async listFiles() {\n    const response = await api.get('/file/list');\n    return response.data;\n  }\n}\n\n// Export singleton instance\nexport const apiService = new ApiService();\nexport default apiService;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/auth/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\nimport { apiService } from \"../../services/api\";\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const router = useRouter();\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n\n    try {\n      const data = await apiService.login(username, password);\n      \n      // Store user data in localStorage\n      localStorage.setItem(\"user\", JSON.stringify({ \n        username, \n        token: data.access_token \n      }));\n      localStorage.setItem(\"token\", data.access_token);\n      \n      // Redirect to home page\n      router.push(\"/home\");\n    } catch (err: any) {\n      console.error(\"Login error:\", err);\n      setError(err.response?.data?.detail || \"Invalid username or password\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-teal-400 via-indigo-300 to-pink-400\">\n      <div className=\"w-full max-w-md bg-white rounded-2xl shadow-2xl px-10 py-12 flex flex-col items-center\">\n        <h1 className=\"text-3xl font-extrabold text-indigo-800 mb-8\">Login</h1>\n        {error && (\n          <div className=\"mb-4 p-3 bg-red-50 text-red-700 text-sm rounded-md border border-red-200 text-center shadow\">\n            {error}\n          </div>\n        )}\n        <form onSubmit={handleLogin} className=\"w-full space-y-6\">\n          {/* Username Field */}\n          <div>\n            <label\n              htmlFor=\"username\"\n              className=\"block text-sm font-semibold text-indigo-700 mb-2\"\n            >\n              Username\n            </label>\n            <div className=\"relative\">\n              <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-indigo-400\">\n                {/* User icon */}\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M16 21v-2a4 4 0 0 0-8 0v2\"></path>\n                  <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n                </svg>\n              </span>\n              <input\n                type=\"text\"\n                id=\"username\"\n                className=\"w-full pl-10 pr-4 py-3 text-base border-b border-indigo-200 focus:border-pink-400 focus:outline-none bg-transparent placeholder-indigo-300 transition\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                required\n                placeholder=\"Type your username\"\n                autoComplete=\"username\"\n              />\n            </div>\n          </div>\n          {/* Password Field */}\n          <div>\n            <div className=\"flex items-center justify-between mb-2\">\n              <label\n                htmlFor=\"password\"\n                className=\"block text-sm font-semibold text-indigo-700\"\n              >\n                Password\n              </label>\n              <a href=\"#\" className=\"text-indigo-400 text-xs hover:underline\">\n                Forgot password?\n              </a>\n            </div>\n            <div className=\"relative\">\n              {/* Static lock icon on the left */}\n              <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-indigo-400 pointer-events-none\">\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\"></rect>\n                  <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\n                </svg>\n              </span>\n              {/* Eye icon for toggling password visibility on the right */}\n              <button\n                type=\"button\"\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 text-indigo-400 focus:outline-none\"\n                onClick={() => setShowPassword((v) => !v)}\n                aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n                tabIndex={0}\n              >\n                {showPassword ? (\n                  // Eye icon for visible\n                  <svg\n                    width=\"20\"\n                    height=\"20\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M1 12s4-7 11-7 11 7 11 7-4 7-11 7S1 12 1 12z\" />\n                    <circle cx=\"12\" cy=\"12\" r=\"3\" />\n                  </svg>\n                ) : (\n                  // Eye-off icon for hidden\n                  <svg\n                    width=\"20\"\n                    height=\"20\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a21.77 21.77 0 0 1 5.06-6.06M1 1l22 22\" />\n                    <path d=\"M9.53 9.53A3 3 0 0 0 12 15a3 3 0 0 0 2.47-5.47\" />\n                  </svg>\n                )}\n              </button>\n              <input\n                type={showPassword ? \"text\" : \"password\"}\n                id=\"password\"\n                className=\"w-full pl-10 pr-10 py-3 text-base border-b border-indigo-200 focus:border-pink-400 focus:outline-none bg-transparent placeholder-indigo-300 transition\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                placeholder=\"Type your password\"\n                autoComplete=\"current-password\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"w-full py-3 mt-2 rounded-full font-bold text-white bg-gradient-to-r from-purple-500 to-pink-500 shadow-lg hover:from-purple-600 hover:to-pink-600 transition-all focus:outline-none focus:ring-2 focus:ring-pink-300 focus:ring-offset-2 disabled:opacity-70 disabled:cursor-not-allowed\"\n          >\n            {isLoading ? \"Logging in...\" : \"LOGIN\"}\n          </button>\n        </form>\n        <div className=\"my-8 text-indigo-400 text-sm text-center w-full\">\n          Or Sign Up Using\n        </div>\n        <div className=\"flex space-x-6 mb-8\">\n          <a\n            href=\"#\"\n            className=\"bg-blue-700 hover:bg-blue-800 text-white rounded-full p-3 shadow transition\"\n            aria-label=\"LinkedIn\"\n          >\n            {/* LinkedIn icon */}\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d=\"M19 0h-14c-2.76 0-5 2.24-5 5v14c0 2.76 2.24 5 5 5h14c2.76 0 5-2.24 5-5v-14c0-2.76-2.24-5-5-5zm-11 19h-3v-9h3v9zm-1.5-10.29c-.97 0-1.75-.79-1.75-1.75s.78-1.75 1.75-1.75 1.75.79 1.75 1.75-.78 1.75-1.75 1.75zm13.5 10.29h-3v-4.5c0-1.08-.02-2.47-1.5-2.47-1.5 0-1.73 1.17-1.73 2.39v4.58h-3v-9h2.89v1.23h.04c.4-.75 1.37-1.54 2.82-1.54 3.01 0 3.57 1.98 3.57 4.56v4.75z\" />\n            </svg>\n          </a>\n          <a\n            href=\"#\"\n            className=\"bg-gray-900 hover:bg-gray-800 text-white rounded-full p-3 shadow transition\"\n            aria-label=\"GitHub\"\n          >\n            {/* GitHub icon */}\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d=\"M12 0C5.37 0 0 5.37 0 12c0 5.3 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.085 1.84 1.237 1.84 1.237 1.07 1.834 2.809 1.304 3.495.997.108-.775.418-1.305.762-1.605-2.665-.305-5.466-1.332-5.466-5.931 0-1.31.469-2.381 1.236-3.221-.124-.303-.535-1.523.117-3.176 0 0 1.008-.322 3.301 1.23a11.52 11.52 0 0 1 3.003-.404c1.018.005 2.045.138 3.003.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.873.119 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.803 5.624-5.475 5.921.43.372.823 1.102.823 2.222v3.293c0 .322.218.694.825.576C20.565 21.796 24 17.297 24 12c0-6.63-5.373-12-12-12z\" />\n            </svg>\n          </a>\n          <a\n            href=\"#\"\n            className=\"bg-pink-500 hover:bg-pink-600 text-white rounded-full p-3 shadow transition\"\n            aria-label=\"Google\"\n          >\n            {/* Google icon */}\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d=\"M21.35 11.1h-9.18v2.92h5.27c-.23 1.23-1.41 3.6-5.27 3.6-3.17 0-5.76-2.62-5.76-5.82s2.59-5.82 5.76-5.82c1.81 0 3.03.77 3.73 1.43l2.54-2.47C17.09 3.98 15.23 3 13.17 3 7.88 3 3.5 7.48 3.5 12.7c0 5.22 4.38 9.7 9.67 9.7 5.59 0 9.27-3.92 9.27-9.46 0-.64-.07-1.13-.17-1.64z\"></path>\n            </svg>\n          </a>\n        </div>\n        <div className=\"text-indigo-400 text-sm text-center w-full mb-2\">\n          Don't have an account?\n        </div>\n        <Link\n          href=\"/auth/signup\"\n          className=\"text-pink-500 font-bold hover:underline\"\n        >\n          Create a new account\n        </Link>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc,OAAO;QACzB,EAAE,cAAc;QAChB,SAAS;QACT,aAAa;QAEb,IAAI;YACF,MAAM,OAAO,MAAM,yHAAA,CAAA,aAAU,CAAC,KAAK,CAAC,UAAU;YAE9C,kCAAkC;YAClC,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;gBAC1C;gBACA,OAAO,KAAK,YAAY;YAC1B;YACA,aAAa,OAAO,CAAC,SAAS,KAAK,YAAY;YAE/C,wBAAwB;YACxB,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,KAAU;YACjB,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,SAAS,IAAI,QAAQ,EAAE,MAAM,UAAU;QACzC,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA+C;;;;;;gBAC5D,uBACC,6LAAC;oBAAI,WAAU;8BACZ;;;;;;8BAGL,6LAAC;oBAAK,UAAU;oBAAa,WAAU;;sCAErC,6LAAC;;8CACC,6LAAC;oCACC,SAAQ;oCACR,WAAU;8CACX;;;;;;8CAGD,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDAEd,cAAA,6LAAC;gDACC,OAAM;gDACN,QAAO;gDACP,MAAK;gDACL,QAAO;gDACP,aAAY;gDACZ,SAAQ;;kEAER,6LAAC;wDAAK,GAAE;;;;;;kEACR,6LAAC;wDAAO,IAAG;wDAAK,IAAG;wDAAI,GAAE;;;;;;;;;;;;;;;;;sDAG7B,6LAAC;4CACC,MAAK;4CACL,IAAG;4CACH,WAAU;4CACV,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4CAC3C,QAAQ;4CACR,aAAY;4CACZ,cAAa;;;;;;;;;;;;;;;;;;sCAKnB,6LAAC;;8CACC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,SAAQ;4CACR,WAAU;sDACX;;;;;;sDAGD,6LAAC;4CAAE,MAAK;4CAAI,WAAU;sDAA0C;;;;;;;;;;;;8CAIlE,6LAAC;oCAAI,WAAU;;sDAEb,6LAAC;4CAAK,WAAU;sDACd,cAAA,6LAAC;gDACC,OAAM;gDACN,QAAO;gDACP,MAAK;gDACL,QAAO;gDACP,aAAY;gDACZ,SAAQ;;kEAER,6LAAC;wDAAK,GAAE;wDAAI,GAAE;wDAAK,OAAM;wDAAK,QAAO;wDAAK,IAAG;;;;;;kEAC7C,6LAAC;wDAAK,GAAE;;;;;;;;;;;;;;;;;sDAIZ,6LAAC;4CACC,MAAK;4CACL,WAAU;4CACV,SAAS,IAAM,gBAAgB,CAAC,IAAM,CAAC;4CACvC,cAAY,eAAe,kBAAkB;4CAC7C,UAAU;sDAET,eACC,uBAAuB;0DACvB,6LAAC;gDACC,OAAM;gDACN,QAAO;gDACP,MAAK;gDACL,QAAO;gDACP,aAAY;gDACZ,SAAQ;;kEAER,6LAAC;wDAAK,GAAE;;;;;;kEACR,6LAAC;wDAAO,IAAG;wDAAK,IAAG;wDAAK,GAAE;;;;;;;;;;;uDAG5B,0BAA0B;0DAC1B,6LAAC;gDACC,OAAM;gDACN,QAAO;gDACP,MAAK;gDACL,QAAO;gDACP,aAAY;gDACZ,SAAQ;;kEAER,6LAAC;wDAAK,GAAE;;;;;;kEACR,6LAAC;wDAAK,GAAE;;;;;;;;;;;;;;;;;sDAId,6LAAC;4CACC,MAAM,eAAe,SAAS;4CAC9B,IAAG;4CACH,WAAU;4CACV,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4CAC3C,QAAQ;4CACR,aAAY;4CACZ,cAAa;;;;;;;;;;;;;;;;;;sCAInB,6LAAC;4BACC,MAAK;4BACL,UAAU;4BACV,WAAU;sCAET,YAAY,kBAAkB;;;;;;;;;;;;8BAGnC,6LAAC;oBAAI,WAAU;8BAAkD;;;;;;8BAGjE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,MAAK;4BACL,WAAU;4BACV,cAAW;sCAGX,cAAA,6LAAC;gCAAI,OAAM;gCAAK,QAAO;gCAAK,MAAK;gCAAe,SAAQ;0CACtD,cAAA,6LAAC;oCAAK,GAAE;;;;;;;;;;;;;;;;sCAGZ,6LAAC;4BACC,MAAK;4BACL,WAAU;4BACV,cAAW;sCAGX,cAAA,6LAAC;gCAAI,OAAM;gCAAK,QAAO;gCAAK,MAAK;gCAAe,SAAQ;0CACtD,cAAA,6LAAC;oCAAK,GAAE;;;;;;;;;;;;;;;;sCAGZ,6LAAC;4BACC,MAAK;4BACL,WAAU;4BACV,cAAW;sCAGX,cAAA,6LAAC;gCAAI,OAAM;gCAAK,QAAO;gCAAK,MAAK;gCAAe,SAAQ;0CACtD,cAAA,6LAAC;oCAAK,GAAE;;;;;;;;;;;;;;;;;;;;;;8BAId,6LAAC;oBAAI,WAAU;8BAAkD;;;;;;8BAGjE,6LAAC,+JAAA,CAAA,UAAI;oBACH,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;GAjNwB;;QAMP,qIAAA,CAAA,YAAS;;;KANF","debugId":null}}]
}