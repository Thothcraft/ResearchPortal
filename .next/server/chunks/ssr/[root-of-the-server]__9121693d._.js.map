{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/components/TrainingMonitor.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { Play, Pause, StopCircle, TrendingUp, Clock, Cpu } from 'lucide-react';\n\ninterface TrainingMonitorProps {\n  job: {\n    job_id: string;\n    model: string;\n    status: string;\n    current_epoch: number;\n    total_epochs: number;\n    metrics: {\n      loss: number[];\n      accuracy: number[];\n      val_loss?: number[];\n      val_accuracy?: number[];\n    };\n    best_metrics?: {\n      val_accuracy?: number;\n      best_epoch?: number;\n    };\n  };\n  onControl: (jobId: string, action: 'pause' | 'resume' | 'cancel') => void;\n}\n\nexport default function TrainingMonitor({ job, onControl }: TrainingMonitorProps) {\n  const progress = (job.current_epoch / job.total_epochs) * 100;\n  \n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'running': return 'text-green-500';\n      case 'paused': return 'text-yellow-500';\n      case 'completed': return 'text-blue-500';\n      case 'failed': return 'text-red-500';\n      default: return 'text-gray-500';\n    }\n  };\n\n  const getLatestMetrics = () => {\n    const latest: any = {};\n    if (job.metrics.loss?.length > 0) {\n      latest.loss = job.metrics.loss[job.metrics.loss.length - 1].toFixed(4);\n    }\n    if (job.metrics.accuracy?.length > 0) {\n      latest.accuracy = (job.metrics.accuracy[job.metrics.accuracy.length - 1] * 100).toFixed(2);\n    }\n    if (job.metrics.val_loss?.length > 0) {\n      latest.val_loss = job.metrics.val_loss[job.metrics.val_loss.length - 1].toFixed(4);\n    }\n    if (job.metrics.val_accuracy?.length > 0) {\n      latest.val_accuracy = (job.metrics.val_accuracy[job.metrics.val_accuracy.length - 1] * 100).toFixed(2);\n    }\n    return latest;\n  };\n\n  const latestMetrics = getLatestMetrics();\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0.95 }}\n      animate={{ opacity: 1, scale: 1 }}\n      className=\"bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20 shadow-xl\"\n    >\n      {/* Header */}\n      <div className=\"flex justify-between items-start mb-4\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-white\">Training Job</h3>\n          <p className=\"text-sm text-gray-300\">Model: {job.model}</p>\n          <p className=\"text-xs text-gray-400 mt-1\">ID: {job.job_id}</p>\n        </div>\n        <div className={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(job.status)}`}>\n          {job.status.toUpperCase()}\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"mb-4\">\n        <div className=\"flex justify-between text-sm text-gray-300 mb-2\">\n          <span>Epoch {job.current_epoch} / {job.total_epochs}</span>\n          <span>{progress.toFixed(1)}%</span>\n        </div>\n        <div className=\"w-full bg-gray-700 rounded-full h-2\">\n          <motion.div\n            initial={{ width: 0 }}\n            animate={{ width: `${progress}%` }}\n            transition={{ duration: 0.5 }}\n            className=\"bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full\"\n          />\n        </div>\n      </div>\n\n      {/* Metrics Grid */}\n      <div className=\"grid grid-cols-2 gap-4 mb-4\">\n        {latestMetrics.loss !== undefined && (\n          <div className=\"bg-black/20 rounded-lg p-3\">\n            <div className=\"flex items-center gap-2 mb-1\">\n              <TrendingUp className=\"w-4 h-4 text-blue-400\" />\n              <span className=\"text-xs text-gray-400\">Loss</span>\n            </div>\n            <p className=\"text-lg font-semibold text-white\">{latestMetrics.loss}</p>\n          </div>\n        )}\n        \n        {latestMetrics.accuracy !== undefined && (\n          <div className=\"bg-black/20 rounded-lg p-3\">\n            <div className=\"flex items-center gap-2 mb-1\">\n              <TrendingUp className=\"w-4 h-4 text-green-400\" />\n              <span className=\"text-xs text-gray-400\">Accuracy</span>\n            </div>\n            <p className=\"text-lg font-semibold text-white\">{latestMetrics.accuracy}%</p>\n          </div>\n        )}\n        \n        {latestMetrics.val_loss !== undefined && (\n          <div className=\"bg-black/20 rounded-lg p-3\">\n            <div className=\"flex items-center gap-2 mb-1\">\n              <TrendingUp className=\"w-4 h-4 text-orange-400\" />\n              <span className=\"text-xs text-gray-400\">Val Loss</span>\n            </div>\n            <p className=\"text-lg font-semibold text-white\">{latestMetrics.val_loss}</p>\n          </div>\n        )}\n        \n        {latestMetrics.val_accuracy !== undefined && (\n          <div className=\"bg-black/20 rounded-lg p-3\">\n            <div className=\"flex items-center gap-2 mb-1\">\n              <TrendingUp className=\"w-4 h-4 text-purple-400\" />\n              <span className=\"text-xs text-gray-400\">Val Accuracy</span>\n            </div>\n            <p className=\"text-lg font-semibold text-white\">{latestMetrics.val_accuracy}%</p>\n          </div>\n        )}\n      </div>\n\n      {/* Best Metrics */}\n      {job.best_metrics?.val_accuracy && (\n        <div className=\"bg-green-500/10 border border-green-500/30 rounded-lg p-3 mb-4\">\n          <p className=\"text-sm text-green-400\">\n            Best Accuracy: {(job.best_metrics.val_accuracy * 100).toFixed(2)}% \n            {job.best_metrics.best_epoch && ` (Epoch ${job.best_metrics.best_epoch})`}\n          </p>\n        </div>\n      )}\n\n      {/* Control Buttons */}\n      <div className=\"flex gap-2\">\n        {job.status === 'running' && (\n          <button\n            onClick={() => onControl(job.job_id, 'pause')}\n            className=\"flex-1 bg-yellow-500/20 hover:bg-yellow-500/30 text-yellow-400 py-2 px-4 rounded-lg text-sm font-medium transition-colors flex items-center justify-center gap-2\"\n          >\n            <Pause className=\"w-4 h-4\" />\n            Pause\n          </button>\n        )}\n        \n        {job.status === 'paused' && (\n          <button\n            onClick={() => onControl(job.job_id, 'resume')}\n            className=\"flex-1 bg-green-500/20 hover:bg-green-500/30 text-green-400 py-2 px-4 rounded-lg text-sm font-medium transition-colors flex items-center justify-center gap-2\"\n          >\n            <Play className=\"w-4 h-4\" />\n            Resume\n          </button>\n        )}\n        \n        {(job.status === 'running' || job.status === 'paused') && (\n          <button\n            onClick={() => onControl(job.job_id, 'cancel')}\n            className=\"flex-1 bg-red-500/20 hover:bg-red-500/30 text-red-400 py-2 px-4 rounded-lg text-sm font-medium transition-colors flex items-center justify-center gap-2\"\n          >\n            <StopCircle className=\"w-4 h-4\" />\n            Cancel\n          </button>\n        )}\n      </div>\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AAAA;AAAA;AAJA;;;;AA2Be,SAAS,gBAAgB,EAAE,GAAG,EAAE,SAAS,EAAwB;IAC9E,MAAM,WAAW,AAAC,IAAI,aAAa,GAAG,IAAI,YAAY,GAAI;IAE1D,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK;gBAAW,OAAO;YACvB,KAAK;gBAAU,OAAO;YACtB,KAAK;gBAAa,OAAO;YACzB,KAAK;gBAAU,OAAO;YACtB;gBAAS,OAAO;QAClB;IACF;IAEA,MAAM,mBAAmB;QACvB,MAAM,SAAc,CAAC;QACrB,IAAI,IAAI,OAAO,CAAC,IAAI,EAAE,SAAS,GAAG;YAChC,OAAO,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC;QACtE;QACA,IAAI,IAAI,OAAO,CAAC,QAAQ,EAAE,SAAS,GAAG;YACpC,OAAO,QAAQ,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,EAAE,OAAO,CAAC;QAC1F;QACA,IAAI,IAAI,OAAO,CAAC,QAAQ,EAAE,SAAS,GAAG;YACpC,OAAO,QAAQ,GAAG,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC;QAClF;QACA,IAAI,IAAI,OAAO,CAAC,YAAY,EAAE,SAAS,GAAG;YACxC,OAAO,YAAY,GAAG,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,EAAE,OAAO,CAAC;QACtG;QACA,OAAO;IACT;IAEA,MAAM,gBAAgB;IAEtB,qBACE,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,OAAO;QAAK;QACnC,SAAS;YAAE,SAAS;YAAG,OAAO;QAAE;QAChC,WAAU;;0BAGV,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAAmC;;;;;;0CACjD,8OAAC;gCAAE,WAAU;;oCAAwB;oCAAQ,IAAI,KAAK;;;;;;;0CACtD,8OAAC;gCAAE,WAAU;;oCAA6B;oCAAK,IAAI,MAAM;;;;;;;;;;;;;kCAE3D,8OAAC;wBAAI,WAAW,CAAC,2CAA2C,EAAE,eAAe,IAAI,MAAM,GAAG;kCACvF,IAAI,MAAM,CAAC,WAAW;;;;;;;;;;;;0BAK3B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;oCAAK;oCAAO,IAAI,aAAa;oCAAC;oCAAI,IAAI,YAAY;;;;;;;0CACnD,8OAAC;;oCAAM,SAAS,OAAO,CAAC;oCAAG;;;;;;;;;;;;;kCAE7B,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;4BACT,SAAS;gCAAE,OAAO;4BAAE;4BACpB,SAAS;gCAAE,OAAO,GAAG,SAAS,CAAC,CAAC;4BAAC;4BACjC,YAAY;gCAAE,UAAU;4BAAI;4BAC5B,WAAU;;;;;;;;;;;;;;;;;0BAMhB,8OAAC;gBAAI,WAAU;;oBACZ,cAAc,IAAI,KAAK,2BACtB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,kNAAA,CAAA,aAAU;wCAAC,WAAU;;;;;;kDACtB,8OAAC;wCAAK,WAAU;kDAAwB;;;;;;;;;;;;0CAE1C,8OAAC;gCAAE,WAAU;0CAAoC,cAAc,IAAI;;;;;;;;;;;;oBAItE,cAAc,QAAQ,KAAK,2BAC1B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,kNAAA,CAAA,aAAU;wCAAC,WAAU;;;;;;kDACtB,8OAAC;wCAAK,WAAU;kDAAwB;;;;;;;;;;;;0CAE1C,8OAAC;gCAAE,WAAU;;oCAAoC,cAAc,QAAQ;oCAAC;;;;;;;;;;;;;oBAI3E,cAAc,QAAQ,KAAK,2BAC1B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,kNAAA,CAAA,aAAU;wCAAC,WAAU;;;;;;kDACtB,8OAAC;wCAAK,WAAU;kDAAwB;;;;;;;;;;;;0CAE1C,8OAAC;gCAAE,WAAU;0CAAoC,cAAc,QAAQ;;;;;;;;;;;;oBAI1E,cAAc,YAAY,KAAK,2BAC9B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,kNAAA,CAAA,aAAU;wCAAC,WAAU;;;;;;kDACtB,8OAAC;wCAAK,WAAU;kDAAwB;;;;;;;;;;;;0CAE1C,8OAAC;gCAAE,WAAU;;oCAAoC,cAAc,YAAY;oCAAC;;;;;;;;;;;;;;;;;;;YAMjF,IAAI,YAAY,EAAE,8BACjB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;;wBAAyB;wBACpB,CAAC,IAAI,YAAY,CAAC,YAAY,GAAG,GAAG,EAAE,OAAO,CAAC;wBAAG;wBAChE,IAAI,YAAY,CAAC,UAAU,IAAI,CAAC,QAAQ,EAAE,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;;;;;;;;;;;;0BAM/E,8OAAC;gBAAI,WAAU;;oBACZ,IAAI,MAAM,KAAK,2BACd,8OAAC;wBACC,SAAS,IAAM,UAAU,IAAI,MAAM,EAAE;wBACrC,WAAU;;0CAEV,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;4BAAY;;;;;;;oBAKhC,IAAI,MAAM,KAAK,0BACd,8OAAC;wBACC,SAAS,IAAM,UAAU,IAAI,MAAM,EAAE;wBACrC,WAAU;;0CAEV,8OAAC,kMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAY;;;;;;;oBAK/B,CAAC,IAAI,MAAM,KAAK,aAAa,IAAI,MAAM,KAAK,QAAQ,mBACnD,8OAAC;wBACC,SAAS,IAAM,UAAU,IAAI,MAAM,EAAE;wBACrC,WAAU;;0CAEV,8OAAC,kNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;4BAAY;;;;;;;;;;;;;;;;;;;AAO9C","debugId":null}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/services/api.ts"],"sourcesContent":["/**\n * API Service for Research Portal\n * Handles all communication with Brain backend\n */\n\nimport axios from 'axios';\nimport io, { Socket } from 'socket.io-client';\n\n// API Configuration\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'https://web-production-d7d37.up.railway.app';\nconst WS_URL = process.env.NEXT_PUBLIC_WS_URL || 'wss://web-production-d7d37.up.railway.app';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.code === 'ERR_NETWORK') {\n      console.error('Network error - unable to fetch device data');\n      return Promise.reject(new Error('Unable to connect to the server. Please check your connection.'));\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Helper function to check if a device is online\nconst isDeviceOnline = (lastSeen: string): boolean => {\n  if (!lastSeen) return false;\n  const lastSeenTime = new Date(lastSeen).getTime();\n  const now = new Date().getTime();\n  // Consider device online if seen in the last 5 minutes\n  return (now - lastSeenTime) < (5 * 60 * 1000);\n};\n\n// Types\nexport interface SensorData {\n  temperature: number;\n  humidity: number;\n  pressure: number;\n  orientation: {\n    pitch: number;\n    roll: number;\n    yaw: number;\n  };\n  acceleration: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  compass: number;\n  timestamp: string;\n  device_id: string;\n}\n\nexport interface DeviceInfo {\n  device_id: string;\n  name: string;\n  status: 'online' | 'offline' | 'idle';\n  battery_level?: number;\n  last_seen: string;\n  location?: string;\n  sensors_enabled: boolean;\n}\n\nexport interface TrainingJob {\n  job_id: string;\n  model: string;\n  status: string;\n  progress: string;\n  created_at: string;\n  best_accuracy?: number;\n}\n\nexport interface FederatedSession {\n  session_id: string;\n  session_name: string;\n  status: string;\n  progress: string;\n  clients: number;\n  created_at: string;\n}\n\n// API Service\nclass ApiService {\n  private socket: Socket | null = null;\n\n  // Authentication\n  async login(username: string, password: string) {\n    try {\n      const response = await api.post('/token', {\n        username,\n        password,\n        grant_type: 'password'\n      });\n    \n      if (response.data.access_token) {\n        localStorage.setItem('auth_token', response.data.access_token);\n        // Set default auth header for subsequent requests\n        api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access_token}`;\n      }\n      return response.data;\n    } catch (error: any) {\n      console.error('Login error:', error);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        throw new Error(error.response.data.detail || 'Login failed');\n      } else if (error.request) {\n        // The request was made but no response was received\n        throw new Error('No response from server. Please check your connection.');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        throw new Error('Error setting up login request');\n      }\n    }\n  }\n\n  async register(username: string, password: string, phone: string, role: string = 'researcher') {\n    const response = await api.post('/register', { \n      username, \n      password, \n      phone_number: phone,\n      role \n    });\n    return response.data;\n  }\n\n  async getProfile() {\n    const response = await api.get('/profile');\n    return response.data;\n  }\n\n  async updateProfile(data: any) {\n    const response = await api.put('/profile', data);\n    return response.data;\n  }\n\n  // System\n  async getHealth() {\n    const response = await api.get('/health');\n    return response.data;\n  }\n\n  // ============================================\n  // Device Management\n  // ============================================\n\n  /**\n   * Get all registered devices for the current user\n   */\n  async getDevices() {\n    const response = await api.get('/device/list');\n    return response.data;\n  }\n\n  /**\n   * Register a new device\n   */\n  async registerDevice(deviceData: {\n    device_id: string;\n    device_name?: string;\n    device_type?: string;\n    hardware_info?: Record<string, any>;\n  }) {\n    const response = await api.post('/device/register', deviceData);\n    return response.data;\n  }\n\n  /**\n   * Update device information\n   */\n  async updateDevice(deviceId: string, data: any) {\n    const response = await api.put(`/device/${deviceId}`, data);\n    return response.data;\n  }\n\n  /**\n   * Get detailed status of a specific device\n   */\n  async getDeviceStatus(deviceId: string) {\n    const response = await api.get(`/device/${deviceId}/status`);\n    return response.data;\n  }\n\n  /**\n   * Delete a device\n   */\n  async deleteDevice(deviceId: string) {\n    const response = await api.delete(`/device/${deviceId}`);\n    return response.data;\n  }\n\n  // Sensors\n  async getCurrentSensorData(deviceId: string = 'thoth-001'): Promise<SensorData> {\n    const response = await api.get(`/sensors/current?device_id=${deviceId}`);\n    return response.data;\n  }\n\n  async controlSensors(deviceId: string, config: any) {\n    const response = await api.post('/sensors/control', {\n      device_id: deviceId,\n      ...config\n    });\n    return response.data;\n  }\n\n  async getSensorHistory(params: {\n    device_id?: string;\n    limit?: number;\n    offset?: number;\n    start_time?: string;\n    end_time?: string;\n  }) {\n    const response = await api.get('/sensors/history', { params });\n    return response.data;\n  }\n\n  async getSensorStats(deviceId: string, period: string = '1h') {\n    const response = await api.get(`/sensors/stats?device_id=${deviceId}&period=${period}`);\n    return response.data;\n  }\n\n  // WebSocket for live sensor streaming\n  private onDataCallback: ((data: SensorData) => void) | null = null;\n  private simulationInterval: NodeJS.Timeout | null = null;\n\n  connectToSensorStream(deviceId: string, onData: (data: SensorData) => void) {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n\n    this.onDataCallback = onData;\n    \n    // In production, you would connect to the actual WebSocket\n    // this.socket = io(`${WS_URL}?deviceId=${deviceId}`, {\n    //   auth: { token: localStorage.getItem('auth_token') }\n    // });\n    // \n    // this.socket.on('sensor_data', (data: SensorData) => {\n    //   this.onDataCallback?.(data);\n    // });\n    \n    // For now, simulate WebSocket data\n    this.simulateData();\n    \n    return () => {\n      this.disconnectSensorStream();\n    };\n  }\n\n  private simulateData() {\n    // Clear any existing simulation\n    if (this.simulationInterval) {\n      clearInterval(this.simulationInterval);\n    }\n    \n    this.simulationInterval = setInterval(() => {\n      if (!this.onDataCallback) return;\n      \n      const mockData: SensorData = {\n        temperature: 25 + Math.random() * 5,\n        humidity: 40 + Math.random() * 20,\n        pressure: 1000 + Math.random() * 20,\n        orientation: {\n          pitch: Math.random() * 360 - 180,\n          roll: Math.random() * 360 - 180,\n          yaw: Math.random() * 360 - 180,\n        },\n        acceleration: {\n          x: Math.random() * 2 - 1,\n          y: Math.random() * 2 - 1,\n          z: 9.8 + Math.random() * 0.2 - 0.1,\n        },\n        compass: Math.random() * 360,\n        timestamp: new Date().toISOString(),\n        device_id: 'simulated-device',\n      };\n      \n      this.onDataCallback?.(mockData);\n    }, 1000);\n  }\n  \n  disconnectSensorStream() {\n    if (this.simulationInterval) {\n      clearInterval(this.simulationInterval);\n      this.simulationInterval = null;\n    }\n    \n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n    \n    this.onDataCallback = null;\n  }\n\n  // Network\n  async configureWifi(ssid: string, password: string, security: string = 'WPA2') {\n    const response = await api.post('/network/wifi', {\n      ssid,\n      password,\n      security,\n      auto_connect: true\n    });\n    return response.data;\n  }\n\n  async getNetworkStatus(networkInterface: string = 'wlan0') {\n    const response = await api.get(`/network/status?interface=${networkInterface}`);\n    return response.data;\n  }\n\n  async scanNetworks() {\n    const response = await api.get('/network/scan');\n    return response.data;\n  }\n\n  // Training\n  async setupTraining(config: {\n    model: string;\n    data: string;\n    mode: string;\n    epochs?: number;\n    batch_size?: number;\n    learning_rate?: number;\n    device_id?: string;\n  }) {\n    const response = await api.post('/training/training/setup', config);\n    return response.data;\n  }\n\n  async getTrainingStatus(jobId?: string): Promise<TrainingJob | { jobs: TrainingJob[] }> {\n    const url = jobId ? `/training/training/status?job_id=${jobId}` : '/training/training/status';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  async controlTraining(jobId: string, action: 'pause' | 'resume' | 'cancel') {\n    const response = await api.post(`/training/training/${jobId}/control?action=${action}`);\n    return response.data;\n  }\n\n  async getTrainedModels(deviceId?: string) {\n    const url = deviceId ? `/training/training/models?device_id=${deviceId}` : '/training/training/models';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  // Federated Learning\n  async startFederatedTraining(config: {\n    session_name: string;\n    num_rounds: number;\n    min_clients: number;\n    max_clients?: number;\n    differential_privacy?: boolean;\n    noise_multiplier?: number;\n    model_config: any;\n  }) {\n    const response = await api.post('/training/federated/train', config);\n    return response.data;\n  }\n\n  async getFederatedStatus(sessionId?: string): Promise<FederatedSession | { sessions: FederatedSession[] }> {\n    const url = sessionId ? `/training/federated/status?session_id=${sessionId}` : '/training/federated/status';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  async joinFederatedSession(sessionId: string, deviceId: string, dataSamples: number) {\n    const response = await api.post(`/training/federated/${sessionId}/join`, null, {\n      params: {\n        device_id: deviceId,\n        data_samples: dataSamples\n      }\n    });\n    return response.data;\n  }\n\n  // Data\n  async uploadData(formData: FormData) {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  }\n\n  async downloadFile(fileId: string) {\n    const response = await api.get(`/download/${fileId}`, {\n      responseType: 'blob',\n    });\n    return response.data;\n  }\n\n  async queryData(query: string) {\n    const response = await api.post('/query', { query });\n    return response.data;\n  }\n\n  // Files\n  async syncFiles(path: string) {\n    const response = await api.post('/file/sync', { path });\n    return response.data;\n  }\n\n  async listFiles() {\n    const response = await api.get('/file/list');\n    return response.data;\n  }\n}\n\n// Export singleton instance\nexport const apiService = new ApiService();\nexport default apiService;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/%28protected%29/training/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Brain, Play, RefreshCw, Settings, TrendingUp } from 'lucide-react';\nimport TrainingMonitor from '../../components/TrainingMonitor';\nimport apiService from '../../services/api';\n\nexport default function TrainingPage() {\n  const [activeJobs, setActiveJobs] = useState<any[]>([]);\n  const [completedModels, setCompletedModels] = useState<any[]>([]);\n  const [showSetupModal, setShowSetupModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  \n  // Training setup form\n  const [trainingConfig, setTrainingConfig] = useState({\n    model: 'cnn',\n    data: 'sensors',\n    mode: 'on-device',\n    epochs: 10,\n    batch_size: 32,\n    learning_rate: 0.001,\n    validation_split: 0.2,\n    device_id: 'thoth-001'\n  });\n\n  useEffect(() => {\n    fetchTrainingJobs();\n    fetchModels();\n    \n    // Poll for updates every 5 seconds\n    const interval = setInterval(() => {\n      fetchTrainingJobs();\n    }, 5000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchTrainingJobs = async () => {\n    try {\n      const response = await apiService.getTrainingStatus();\n      if ('jobs' in response) {\n        // Add mock metrics for demo\n        const jobsWithMetrics = response.jobs.map((job: any) => ({\n          ...job,\n          current_epoch: parseInt(job.progress?.split('/')[0] || '0'),\n          total_epochs: parseInt(job.progress?.split('/')[1] || '10'),\n          metrics: {\n            loss: [0.5, 0.4, 0.35, 0.3, 0.28],\n            accuracy: [0.6, 0.7, 0.75, 0.78, 0.8],\n            val_loss: [0.55, 0.45, 0.4, 0.38, 0.35],\n            val_accuracy: [0.58, 0.68, 0.72, 0.74, 0.76]\n          },\n          best_metrics: {\n            val_accuracy: 0.76,\n            best_epoch: 5\n          }\n        }));\n        setActiveJobs(jobsWithMetrics.filter((j: any) => \n          ['running', 'paused', 'pending'].includes(j.status)\n        ));\n      }\n    } catch (error) {\n      console.error('Failed to fetch training jobs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchModels = async () => {\n    try {\n      const response = await apiService.getTrainedModels();\n      if (response.models) {\n        setCompletedModels(response.models);\n      }\n    } catch (error) {\n      console.error('Failed to fetch models:', error);\n    }\n  };\n\n  const handleStartTraining = async () => {\n    try {\n      const response = await apiService.setupTraining(trainingConfig);\n      if (response.success) {\n        setShowSetupModal(false);\n        fetchTrainingJobs();\n      }\n    } catch (error) {\n      console.error('Failed to start training:', error);\n    }\n  };\n\n  const handleControlJob = async (jobId: string, action: 'pause' | 'resume' | 'cancel') => {\n    try {\n      await apiService.controlTraining(jobId, action);\n      fetchTrainingJobs();\n    } catch (error) {\n      console.error(`Failed to ${action} job:`, error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mb-8\"\n        >\n          <h1 className=\"text-4xl font-bold text-white mb-2\">Model Training</h1>\n          <p className=\"text-gray-300\">Train and deploy AI models on Thoth devices</p>\n        </motion.div>\n\n        {/* Stats */}\n        <motion.div\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n          className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\"\n        >\n          <div className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 border border-white/20\">\n            <p className=\"text-gray-400 text-sm mb-1\">Active Jobs</p>\n            <p className=\"text-2xl font-bold text-green-400\">{activeJobs.length}</p>\n          </div>\n          <div className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 border border-white/20\">\n            <p className=\"text-gray-400 text-sm mb-1\">Trained Models</p>\n            <p className=\"text-2xl font-bold text-blue-400\">{completedModels.length}</p>\n          </div>\n          <div className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 border border-white/20\">\n            <p className=\"text-gray-400 text-sm mb-1\">Best Accuracy</p>\n            <p className=\"text-2xl font-bold text-purple-400\">\n              {completedModels.length > 0 \n                ? `${Math.max(...completedModels.map(m => m.accuracy || 0)).toFixed(1)}%`\n                : 'N/A'}\n            </p>\n          </div>\n          <div className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 border border-white/20\">\n            <p className=\"text-gray-400 text-sm mb-1\">Total GPU Hours</p>\n            <p className=\"text-2xl font-bold text-orange-400\">24.5</p>\n          </div>\n        </motion.div>\n\n        {/* Actions */}\n        <motion.div\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"flex gap-4 mb-6\"\n        >\n          <button\n            onClick={() => setShowSetupModal(true)}\n            className=\"px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white rounded-lg font-medium transition-all flex items-center gap-2 shadow-lg\"\n          >\n            <Brain className=\"w-5 h-5\" />\n            New Training Job\n          </button>\n          <button\n            onClick={fetchTrainingJobs}\n            className=\"px-6 py-3 bg-white/10 hover:bg-white/20 text-white rounded-lg font-medium transition-colors flex items-center gap-2 border border-white/20\"\n          >\n            <RefreshCw className=\"w-5 h-5\" />\n            Refresh\n          </button>\n        </motion.div>\n\n        {/* Active Training Jobs */}\n        {activeJobs.length > 0 && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.3 }}\n            className=\"mb-8\"\n          >\n            <h2 className=\"text-2xl font-semibold text-white mb-4\">Active Training Jobs</h2>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {activeJobs.map((job, index) => (\n                <motion.div\n                  key={job.job_id}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.1 * index }}\n                >\n                  <TrainingMonitor job={job} onControl={handleControlJob} />\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        )}\n\n        {/* Completed Models */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.4 }}\n        >\n          <h2 className=\"text-2xl font-semibold text-white mb-4\">Trained Models</h2>\n          <div className=\"bg-white/10 backdrop-blur-md rounded-xl border border-white/20 overflow-hidden\">\n            <table className=\"w-full text-sm text-left text-gray-300\">\n              <thead className=\"text-xs uppercase bg-black/20\">\n                <tr>\n                  <th className=\"px-6 py-3\">Model Name</th>\n                  <th className=\"px-6 py-3\">Architecture</th>\n                  <th className=\"px-6 py-3\">Accuracy</th>\n                  <th className=\"px-6 py-3\">Size</th>\n                  <th className=\"px-6 py-3\">Device</th>\n                  <th className=\"px-6 py-3\">Created</th>\n                  <th className=\"px-6 py-3\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {completedModels.map((model, index) => (\n                  <tr key={model.model_id} className=\"border-b border-white/10\">\n                    <td className=\"px-6 py-4 font-medium text-white\">{model.model_name}</td>\n                    <td className=\"px-6 py-4\">{model.architecture}</td>\n                    <td className=\"px-6 py-4\">\n                      <span className=\"text-green-400 font-medium\">\n                        {model.accuracy ? `${(model.accuracy * 100).toFixed(2)}%` : 'N/A'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4\">{model.size_mb?.toFixed(1)} MB</td>\n                    <td className=\"px-6 py-4\">{model.device_id || model.num_clients ? `${model.num_clients} devices` : 'N/A'}</td>\n                    <td className=\"px-6 py-4\">\n                      {model.created_at ? new Date(model.created_at).toLocaleDateString() : 'N/A'}\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <button className=\"text-blue-400 hover:text-blue-300 mr-3\">Deploy</button>\n                      <button className=\"text-purple-400 hover:text-purple-300\">Download</button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            {completedModels.length === 0 && (\n              <div className=\"text-center py-8 text-gray-400\">\n                No trained models yet. Start a training job to create your first model.\n              </div>\n            )}\n          </div>\n        </motion.div>\n\n        {/* Training Setup Modal */}\n        {showSetupModal && (\n          <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n            <motion.div\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              className=\"bg-gray-900 rounded-xl p-6 max-w-md w-full mx-4 border border-white/20\"\n            >\n              <h3 className=\"text-xl font-semibold text-white mb-4\">Setup Training Job</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm text-gray-300 mb-1\">Model Architecture</label>\n                  <select\n                    value={trainingConfig.model}\n                    onChange={(e) => setTrainingConfig({...trainingConfig, model: e.target.value})}\n                    className=\"w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white\"\n                  >\n                    <option value=\"cnn\">CNN</option>\n                    <option value=\"rnn\">RNN</option>\n                    <option value=\"lstm\">LSTM</option>\n                    <option value=\"transformer\">Transformer</option>\n                    <option value=\"linear\">Linear</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm text-gray-300 mb-1\">Data Source</label>\n                  <select\n                    value={trainingConfig.data}\n                    onChange={(e) => setTrainingConfig({...trainingConfig, data: e.target.value})}\n                    className=\"w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white\"\n                  >\n                    <option value=\"sensors\">Sensor Data</option>\n                    <option value=\"images\">Images</option>\n                    <option value=\"audio\">Audio</option>\n                    <option value=\"text\">Text</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm text-gray-300 mb-1\">Training Mode</label>\n                  <select\n                    value={trainingConfig.mode}\n                    onChange={(e) => setTrainingConfig({...trainingConfig, mode: e.target.value})}\n                    className=\"w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white\"\n                  >\n                    <option value=\"on-device\">On Device</option>\n                    <option value=\"cloud\">Cloud</option>\n                    <option value=\"edge\">Edge</option>\n                    <option value=\"federated\">Federated</option>\n                  </select>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm text-gray-300 mb-1\">Epochs</label>\n                    <input\n                      type=\"number\"\n                      value={trainingConfig.epochs}\n                      onChange={(e) => setTrainingConfig({...trainingConfig, epochs: parseInt(e.target.value)})}\n                      className=\"w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm text-gray-300 mb-1\">Batch Size</label>\n                    <input\n                      type=\"number\"\n                      value={trainingConfig.batch_size}\n                      onChange={(e) => setTrainingConfig({...trainingConfig, batch_size: parseInt(e.target.value)})}\n                      className=\"w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm text-gray-300 mb-1\">Learning Rate</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.0001\"\n                    value={trainingConfig.learning_rate}\n                    onChange={(e) => setTrainingConfig({...trainingConfig, learning_rate: parseFloat(e.target.value)})}\n                    className=\"w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex gap-3 mt-6\">\n                <button\n                  onClick={handleStartTraining}\n                  className=\"flex-1 px-4 py-2 bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white rounded-lg font-medium transition-all\"\n                >\n                  Start Training\n                </button>\n                <button\n                  onClick={() => setShowSetupModal(false)}\n                  className=\"flex-1 px-4 py-2 bg-white/10 hover:bg-white/20 text-white rounded-lg font-medium transition-colors border border-white/20\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </motion.div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AANA;;;;;;;AAQe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IACtD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAChE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,sBAAsB;IACtB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACnD,OAAO;QACP,MAAM;QACN,MAAM;QACN,QAAQ;QACR,YAAY;QACZ,eAAe;QACf,kBAAkB;QAClB,WAAW;IACb;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;QACA;QAEA,mCAAmC;QACnC,MAAM,WAAW,YAAY;YAC3B;QACF,GAAG;QAEH,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,MAAM,oBAAoB;QACxB,IAAI;YACF,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAU,CAAC,iBAAiB;YACnD,IAAI,UAAU,UAAU;gBACtB,4BAA4B;gBAC5B,MAAM,kBAAkB,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC,MAAa,CAAC;wBACvD,GAAG,GAAG;wBACN,eAAe,SAAS,IAAI,QAAQ,EAAE,MAAM,IAAI,CAAC,EAAE,IAAI;wBACvD,cAAc,SAAS,IAAI,QAAQ,EAAE,MAAM,IAAI,CAAC,EAAE,IAAI;wBACtD,SAAS;4BACP,MAAM;gCAAC;gCAAK;gCAAK;gCAAM;gCAAK;6BAAK;4BACjC,UAAU;gCAAC;gCAAK;gCAAK;gCAAM;gCAAM;6BAAI;4BACrC,UAAU;gCAAC;gCAAM;gCAAM;gCAAK;gCAAM;6BAAK;4BACvC,cAAc;gCAAC;gCAAM;gCAAM;gCAAM;gCAAM;6BAAK;wBAC9C;wBACA,cAAc;4BACZ,cAAc;4BACd,YAAY;wBACd;oBACF,CAAC;gBACD,cAAc,gBAAgB,MAAM,CAAC,CAAC,IACpC;wBAAC;wBAAW;wBAAU;qBAAU,CAAC,QAAQ,CAAC,EAAE,MAAM;YAEtD;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;QAClD,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,cAAc;QAClB,IAAI;YACF,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAU,CAAC,gBAAgB;YAClD,IAAI,SAAS,MAAM,EAAE;gBACnB,mBAAmB,SAAS,MAAM;YACpC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C;IACF;IAEA,MAAM,sBAAsB;QAC1B,IAAI;YACF,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAU,CAAC,aAAa,CAAC;YAChD,IAAI,SAAS,OAAO,EAAE;gBACpB,kBAAkB;gBAClB;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,MAAM,mBAAmB,OAAO,OAAe;QAC7C,IAAI;YACF,MAAM,sHAAA,CAAA,UAAU,CAAC,eAAe,CAAC,OAAO;YACxC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,UAAU,EAAE,OAAO,KAAK,CAAC,EAAE;QAC5C;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;wBAAG,GAAG,CAAC;oBAAG;oBAC9B,SAAS;wBAAE,SAAS;wBAAG,GAAG;oBAAE;oBAC5B,WAAU;;sCAEV,8OAAC;4BAAG,WAAU;sCAAqC;;;;;;sCACnD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;8BAI/B,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;wBAAG,GAAG,CAAC;oBAAG;oBAC9B,SAAS;wBAAE,SAAS;wBAAG,GAAG;oBAAE;oBAC5B,YAAY;wBAAE,OAAO;oBAAI;oBACzB,WAAU;;sCAEV,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA6B;;;;;;8CAC1C,8OAAC;oCAAE,WAAU;8CAAqC,WAAW,MAAM;;;;;;;;;;;;sCAErE,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA6B;;;;;;8CAC1C,8OAAC;oCAAE,WAAU;8CAAoC,gBAAgB,MAAM;;;;;;;;;;;;sCAEzE,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA6B;;;;;;8CAC1C,8OAAC;oCAAE,WAAU;8CACV,gBAAgB,MAAM,GAAG,IACtB,GAAG,KAAK,GAAG,IAAI,gBAAgB,GAAG,CAAC,CAAA,IAAK,EAAE,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,GACvE;;;;;;;;;;;;sCAGR,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA6B;;;;;;8CAC1C,8OAAC;oCAAE,WAAU;8CAAqC;;;;;;;;;;;;;;;;;;8BAKtD,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;wBAAG,GAAG,CAAC;oBAAG;oBAC9B,SAAS;wBAAE,SAAS;wBAAG,GAAG;oBAAE;oBAC5B,YAAY;wBAAE,OAAO;oBAAI;oBACzB,WAAU;;sCAEV,8OAAC;4BACC,SAAS,IAAM,kBAAkB;4BACjC,WAAU;;8CAEV,8OAAC,oMAAA,CAAA,QAAK;oCAAC,WAAU;;;;;;gCAAY;;;;;;;sCAG/B,8OAAC;4BACC,SAAS;4BACT,WAAU;;8CAEV,8OAAC,gNAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;gCAAY;;;;;;;;;;;;;gBAMpC,WAAW,MAAM,GAAG,mBACnB,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;wBAAG,GAAG;oBAAG;oBAC7B,SAAS;wBAAE,SAAS;wBAAG,GAAG;oBAAE;oBAC5B,YAAY;wBAAE,OAAO;oBAAI;oBACzB,WAAU;;sCAEV,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAI,WAAU;sCACZ,WAAW,GAAG,CAAC,CAAC,KAAK,sBACpB,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;oCAET,SAAS;wCAAE,SAAS;wCAAG,GAAG;oCAAG;oCAC7B,SAAS;wCAAE,SAAS;wCAAG,GAAG;oCAAE;oCAC5B,YAAY;wCAAE,OAAO,MAAM;oCAAM;8CAEjC,cAAA,8OAAC,qIAAA,CAAA,UAAe;wCAAC,KAAK;wCAAK,WAAW;;;;;;mCALjC,IAAI,MAAM;;;;;;;;;;;;;;;;8BAazB,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;wBAAG,GAAG;oBAAG;oBAC7B,SAAS;wBAAE,SAAS;wBAAG,GAAG;oBAAE;oBAC5B,YAAY;wBAAE,OAAO;oBAAI;;sCAEzB,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,WAAU;;sDACf,8OAAC;4CAAM,WAAU;sDACf,cAAA,8OAAC;;kEACC,8OAAC;wDAAG,WAAU;kEAAY;;;;;;kEAC1B,8OAAC;wDAAG,WAAU;kEAAY;;;;;;kEAC1B,8OAAC;wDAAG,WAAU;kEAAY;;;;;;kEAC1B,8OAAC;wDAAG,WAAU;kEAAY;;;;;;kEAC1B,8OAAC;wDAAG,WAAU;kEAAY;;;;;;kEAC1B,8OAAC;wDAAG,WAAU;kEAAY;;;;;;kEAC1B,8OAAC;wDAAG,WAAU;kEAAY;;;;;;;;;;;;;;;;;sDAG9B,8OAAC;sDACE,gBAAgB,GAAG,CAAC,CAAC,OAAO,sBAC3B,8OAAC;oDAAwB,WAAU;;sEACjC,8OAAC;4DAAG,WAAU;sEAAoC,MAAM,UAAU;;;;;;sEAClE,8OAAC;4DAAG,WAAU;sEAAa,MAAM,YAAY;;;;;;sEAC7C,8OAAC;4DAAG,WAAU;sEACZ,cAAA,8OAAC;gEAAK,WAAU;0EACb,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,QAAQ,GAAG,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG;;;;;;;;;;;sEAGhE,8OAAC;4DAAG,WAAU;;gEAAa,MAAM,OAAO,EAAE,QAAQ;gEAAG;;;;;;;sEACrD,8OAAC;4DAAG,WAAU;sEAAa,MAAM,SAAS,IAAI,MAAM,WAAW,GAAG,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC,GAAG;;;;;;sEACnG,8OAAC;4DAAG,WAAU;sEACX,MAAM,UAAU,GAAG,IAAI,KAAK,MAAM,UAAU,EAAE,kBAAkB,KAAK;;;;;;sEAExE,8OAAC;4DAAG,WAAU;;8EACZ,8OAAC;oEAAO,WAAU;8EAAyC;;;;;;8EAC3D,8OAAC;oEAAO,WAAU;8EAAwC;;;;;;;;;;;;;mDAfrD,MAAM,QAAQ;;;;;;;;;;;;;;;;gCAqB5B,gBAAgB,MAAM,KAAK,mBAC1B,8OAAC;oCAAI,WAAU;8CAAiC;;;;;;;;;;;;;;;;;;gBAQrD,gCACC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,OAAO;wBAAI;wBAClC,SAAS;4BAAE,SAAS;4BAAG,OAAO;wBAAE;wBAChC,WAAU;;0CAEV,8OAAC;gCAAG,WAAU;0CAAwC;;;;;;0CAEtD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAAmC;;;;;;0DACpD,8OAAC;gDACC,OAAO,eAAe,KAAK;gDAC3B,UAAU,CAAC,IAAM,kBAAkB;wDAAC,GAAG,cAAc;wDAAE,OAAO,EAAE,MAAM,CAAC,KAAK;oDAAA;gDAC5E,WAAU;;kEAEV,8OAAC;wDAAO,OAAM;kEAAM;;;;;;kEACpB,8OAAC;wDAAO,OAAM;kEAAM;;;;;;kEACpB,8OAAC;wDAAO,OAAM;kEAAO;;;;;;kEACrB,8OAAC;wDAAO,OAAM;kEAAc;;;;;;kEAC5B,8OAAC;wDAAO,OAAM;kEAAS;;;;;;;;;;;;;;;;;;kDAI3B,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAAmC;;;;;;0DACpD,8OAAC;gDACC,OAAO,eAAe,IAAI;gDAC1B,UAAU,CAAC,IAAM,kBAAkB;wDAAC,GAAG,cAAc;wDAAE,MAAM,EAAE,MAAM,CAAC,KAAK;oDAAA;gDAC3E,WAAU;;kEAEV,8OAAC;wDAAO,OAAM;kEAAU;;;;;;kEACxB,8OAAC;wDAAO,OAAM;kEAAS;;;;;;kEACvB,8OAAC;wDAAO,OAAM;kEAAQ;;;;;;kEACtB,8OAAC;wDAAO,OAAM;kEAAO;;;;;;;;;;;;;;;;;;kDAIzB,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAAmC;;;;;;0DACpD,8OAAC;gDACC,OAAO,eAAe,IAAI;gDAC1B,UAAU,CAAC,IAAM,kBAAkB;wDAAC,GAAG,cAAc;wDAAE,MAAM,EAAE,MAAM,CAAC,KAAK;oDAAA;gDAC3E,WAAU;;kEAEV,8OAAC;wDAAO,OAAM;kEAAY;;;;;;kEAC1B,8OAAC;wDAAO,OAAM;kEAAQ;;;;;;kEACtB,8OAAC;wDAAO,OAAM;kEAAO;;;;;;kEACrB,8OAAC;wDAAO,OAAM;kEAAY;;;;;;;;;;;;;;;;;;kDAI9B,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAmC;;;;;;kEACpD,8OAAC;wDACC,MAAK;wDACL,OAAO,eAAe,MAAM;wDAC5B,UAAU,CAAC,IAAM,kBAAkB;gEAAC,GAAG,cAAc;gEAAE,QAAQ,SAAS,EAAE,MAAM,CAAC,KAAK;4DAAC;wDACvF,WAAU;;;;;;;;;;;;0DAGd,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAAmC;;;;;;kEACpD,8OAAC;wDACC,MAAK;wDACL,OAAO,eAAe,UAAU;wDAChC,UAAU,CAAC,IAAM,kBAAkB;gEAAC,GAAG,cAAc;gEAAE,YAAY,SAAS,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAC3F,WAAU;;;;;;;;;;;;;;;;;;kDAKhB,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAAmC;;;;;;0DACpD,8OAAC;gDACC,MAAK;gDACL,MAAK;gDACL,OAAO,eAAe,aAAa;gDACnC,UAAU,CAAC,IAAM,kBAAkB;wDAAC,GAAG,cAAc;wDAAE,eAAe,WAAW,EAAE,MAAM,CAAC,KAAK;oDAAC;gDAChG,WAAU;;;;;;;;;;;;;;;;;;0CAKhB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS;wCACT,WAAU;kDACX;;;;;;kDAGD,8OAAC;wCACC,SAAS,IAAM,kBAAkB;wCACjC,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjB","debugId":null}}]
}