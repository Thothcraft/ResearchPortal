{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/components/DeviceCard.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { motion, HTMLMotionProps } from 'framer-motion';\nimport { Wifi, WifiOff, Battery, Activity } from 'lucide-react';\n\ninterface DeviceCardProps {\n  device: {\n    device_id: string;\n    name: string;\n    status: 'online' | 'offline' | 'idle';\n    battery_level?: number;\n    last_seen: string;\n    sensors_enabled: boolean;\n  };\n  onToggleSensors: (deviceId: string) => void;\n  onDelete: (deviceId: string) => void;\n}\n\nexport default function DeviceCard({ device, onToggleSensors, onDelete }: DeviceCardProps) {\n  const getBatteryColor = (level: number) => {\n    if (level > 60) return 'text-green-500';\n    if (level > 30) return 'text-yellow-500';\n    return 'text-red-500';\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'online': return 'bg-green-500';\n      case 'offline': return 'bg-red-500';\n      case 'idle': return 'bg-yellow-500';\n      default: return 'bg-gray-500';\n    }\n  };\n\n  const motionProps: HTMLMotionProps<'div'> & { className?: string } = {\n    initial: { opacity: 0, y: 20 },\n    animate: { opacity: 1, y: 0 },\n    whileHover: { scale: 1.02 },\n    className: 'bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20 shadow-xl'\n  };\n\n  return (\n    <motion.div {...motionProps}>\n      <div className=\"flex flex-col h-full\">\n        <div className=\"flex justify-between items-start mb-4\">\n          <div>\n            <h3 className=\"text-lg font-semibold text-white\">{device.name}</h3>\n            <p className=\"text-sm text-gray-300\">{device.device_id}</p>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className={`w-3 h-3 rounded-full ${getStatusColor(device.status)} animate-pulse`} />\n            <span className=\"text-sm text-gray-300 capitalize\">{device.status}</span>\n            <button\n              onClick={() => onDelete(device.device_id)}\n              className=\"p-2 text-red-500 hover:text-red-400 transition-colors\"\n              title=\"Delete device\"\n            >\n              Ã—\n            </button>\n          </div>\n        </div>\n\n        <div className=\"space-y-3 flex-1\">\n          {/* Battery Status */}\n          {device.battery_level !== undefined && (\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <Battery className={`w-4 h-4 ${getBatteryColor(device.battery_level)}`} />\n                <span className=\"text-sm text-gray-300\">Battery</span>\n              </div>\n              <span className={`text-sm font-medium ${getBatteryColor(device.battery_level)}`}>\n                {device.battery_level}%\n              </span>\n            </div>\n          )}\n\n        {/* Sensors Status */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Activity className={`w-4 h-4 ${device.sensors_enabled ? 'text-green-500' : 'text-gray-500'}`} />\n            <span className=\"text-sm text-gray-300\">Sensors</span>\n          </div>\n          <button\n            onClick={() => onToggleSensors(device.device_id)}\n            className={`px-3 py-1 rounded-full text-xs font-medium transition-colors ${\n              device.sensors_enabled\n                ? 'bg-green-500/20 text-green-400 hover:bg-green-500/30'\n                : 'bg-gray-500/20 text-gray-400 hover:bg-gray-500/30'\n            }`}\n          >\n            {device.sensors_enabled ? 'Active' : 'Inactive'}\n          </button>\n        </div>\n\n        {/* Connection Status */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            {device.status === 'online' ? (\n              <Wifi className=\"w-4 h-4 text-blue-500\" />\n            ) : (\n              <WifiOff className=\"w-4 h-4 text-gray-500\" />\n            )}\n            <span className=\"text-sm text-gray-300\">Connection</span>\n          </div>\n          <span className=\"text-xs text-gray-400\">\n            Last seen: {new Date(device.last_seen).toLocaleTimeString()}\n          </span>\n        </div>\n\n        {/* Sensors Status */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Activity className={`w-4 h-4 ${device.sensors_enabled ? 'text-green-500' : 'text-gray-500'}`} />\n            <span className=\"text-sm text-gray-300\">Sensors</span>\n          </div>\n          <button\n            onClick={() => onToggleSensors(device.device_id)}\n            className={`px-3 py-1 rounded-full text-xs font-medium transition-colors ${\n              device.sensors_enabled\n                ? 'bg-green-500/20 text-green-400 hover:bg-green-500/30'\n                : 'bg-gray-500/20 text-gray-400 hover:bg-gray-500/30'\n            }`}\n          >\n            {device.sensors_enabled ? 'Active' : 'Inactive'}\n          </button>\n        </div>\n\n        {/* Actions */}\n        <div className=\"mt-4 pt-4 border-t border-white/10\">\n          <button\n            onClick={() => onToggleSensors(device.device_id)}\n            className=\"w-full bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 py-2 px-4 rounded-lg text-sm font-medium transition-colors flex items-center justify-center gap-2\"\n          >\n            <Activity className=\"w-4 h-4\" />\n            {device.sensors_enabled ? 'Disable Sensors' : 'Enable Sensors'}\n          </button>\n        </div>\n      </div>\n    </div>\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/components/Navigation.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { User, LogOut, Menu, X, Home, Database, Brain, Settings } from 'lucide-react';\n\nexport default function Navigation() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState<any>(null);\n  const router = useRouter();\n\n  useEffect(() => {\n    // Get user info from localStorage\n    const username = localStorage.getItem('username');\n    const role = localStorage.getItem('user_role');\n    if (username && role) {\n      setUserInfo({ username, role });\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('user_role');\n    router.push('/auth');\n  };\n\n  const navItems = [\n    { name: 'Dashboard', href: '/devices', icon: Home },\n    { name: 'Data', href: '/data', icon: Database },\n    { name: 'Training', href: '/training', icon: Brain },\n    { name: 'Settings', href: '/settings', icon: Settings },\n  ];\n\n  return (\n    <nav className=\"bg-black/20 backdrop-blur-md border-b border-white/10 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between h-16\">\n          {/* Logo and Brand */}\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 flex items-center\">\n              <h1 className=\"text-xl font-bold text-white\">Thoth Research</h1>\n            </div>\n            \n            {/* Desktop Navigation */}\n            <div className=\"hidden md:ml-8 md:flex md:space-x-8\">\n              {navItems.map((item) => {\n                const Icon = item.icon;\n                return (\n                  <a\n                    key={item.name}\n                    href={item.href}\n                    className=\"text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors flex items-center gap-2\"\n                  >\n                    <Icon className=\"w-4 h-4\" />\n                    {item.name}\n                  </a>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* User Menu */}\n          <div className=\"flex items-center\">\n            {userInfo && (\n              <div className=\"hidden md:flex items-center space-x-4\">\n                <div className=\"text-sm\">\n                  <p className=\"text-white font-medium\">{userInfo.username}</p>\n                  <p className=\"text-gray-400 capitalize\">{userInfo.role}</p>\n                </div>\n                <button\n                  onClick={handleLogout}\n                  className=\"bg-red-500/20 hover:bg-red-500/30 text-red-400 px-3 py-2 rounded-lg text-sm font-medium transition-colors flex items-center gap-2\"\n                >\n                  <LogOut className=\"w-4 h-4\" />\n                  Logout\n                </button>\n              </div>\n            )}\n\n            {/* Mobile menu button */}\n            <div className=\"md:hidden\">\n              <button\n                onClick={() => setIsOpen(!isOpen)}\n                className=\"text-gray-400 hover:text-white p-2\"\n              >\n                {isOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Navigation */}\n      {isOpen && (\n        <div className=\"md:hidden bg-black/40 backdrop-blur-md border-t border-white/10\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1\">\n            {navItems.map((item) => {\n              const Icon = item.icon;\n              return (\n                <a\n                  key={item.name}\n                  href={item.href}\n                  className=\"text-gray-300 hover:text-white block px-3 py-2 rounded-md text-base font-medium transition-colors flex items-center gap-2\"\n                  onClick={() => setIsOpen(false)}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  {item.name}\n                </a>\n              );\n            })}\n            \n            {userInfo && (\n              <div className=\"border-t border-white/10 pt-4 mt-4\">\n                <div className=\"px-3 py-2\">\n                  <p className=\"text-white font-medium\">{userInfo.username}</p>\n                  <p className=\"text-gray-400 capitalize text-sm\">{userInfo.role}</p>\n                </div>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full text-left text-red-400 hover:text-red-300 px-3 py-2 rounded-md text-base font-medium transition-colors flex items-center gap-2\"\n                >\n                  <LogOut className=\"w-4 h-4\" />\n                  Logout\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 782, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/services/api.ts"],"sourcesContent":["/**\n * API Service for Research Portal\n * Handles all communication with Brain backend\n */\n\nimport axios from 'axios';\nimport io, { Socket } from 'socket.io-client';\n\n// API Configuration\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'https://web-production-d7d37.up.railway.app';\nconst WS_URL = process.env.NEXT_PUBLIC_WS_URL || 'wss://web-production-d7d37.up.railway.app';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.code === 'ERR_NETWORK') {\n      console.warn('Network error - using mock data');\n      // Return mock data for network errors\n      return Promise.resolve({\n        data: {\n          success: true,\n          message: 'Using mock data (network unavailable)',\n          data: {}\n        }\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Types\nexport interface SensorData {\n  temperature: number;\n  humidity: number;\n  pressure: number;\n  orientation: {\n    pitch: number;\n    roll: number;\n    yaw: number;\n  };\n  acceleration: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  compass: number;\n  timestamp: string;\n  device_id: string;\n}\n\nexport interface DeviceInfo {\n  device_id: string;\n  name: string;\n  status: 'online' | 'offline' | 'idle';\n  battery_level?: number;\n  last_seen: string;\n  location?: string;\n  sensors_enabled: boolean;\n}\n\nexport interface TrainingJob {\n  job_id: string;\n  model: string;\n  status: string;\n  progress: string;\n  created_at: string;\n  best_accuracy?: number;\n}\n\nexport interface FederatedSession {\n  session_id: string;\n  session_name: string;\n  status: string;\n  progress: string;\n  clients: number;\n  created_at: string;\n}\n\n// API Service\nclass ApiService {\n  private socket: Socket | null = null;\n\n  // Authentication\n  async login(email: string, password: string) {\n    const response = await api.post('/token', { email, password });\n    if (response.data.access_token) {\n      localStorage.setItem('auth_token', response.data.access_token);\n    }\n    return response.data;\n  }\n\n  async register(email: string, password: string, role: string = 'researcher') {\n    const response = await api.post('/register', { email, password, role });\n    return response.data;\n  }\n\n  async getProfile() {\n    const response = await api.get('/profile');\n    return response.data;\n  }\n\n  async updateProfile(data: any) {\n    const response = await api.put('/profile', data);\n    return response.data;\n  }\n\n  // System\n  async getHealth() {\n    const response = await api.get('/health');\n    return response.data;\n  }\n\n  // ============================================\n  // Device Management\n  // ============================================\n\n  /**\n   * Get all registered devices for the current user\n   */\n  async getDevices() {\n    const response = await api.get('/device/list');\n    return response.data;\n  }\n\n  /**\n   * Register a new device\n   */\n  async registerDevice(deviceData: {\n    device_id: string;\n    device_name?: string;\n    device_type?: string;\n    hardware_info?: Record<string, any>;\n  }) {\n    const response = await api.post('/device/register', deviceData);\n    return response.data;\n  }\n\n  /**\n   * Update device information\n   */\n  async updateDevice(deviceId: string, data: any) {\n    const response = await api.put(`/device/${deviceId}`, data);\n    return response.data;\n  }\n\n  /**\n   * Get detailed status of a specific device\n   */\n  async getDeviceStatus(deviceId: string) {\n    const response = await api.get(`/device/${deviceId}/status`);\n    return response.data;\n  }\n\n  /**\n   * Delete a device\n   */\n  async deleteDevice(deviceId: string) {\n    const response = await api.delete(`/device/${deviceId}`);\n    return response.data;\n  }\n\n  // Sensors\n  async getCurrentSensorData(deviceId: string = 'thoth-001'): Promise<SensorData> {\n    const response = await api.get(`/sensors/current?device_id=${deviceId}`);\n    return response.data;\n  }\n\n  async controlSensors(deviceId: string, config: any) {\n    const response = await api.post('/sensors/control', {\n      device_id: deviceId,\n      ...config\n    });\n    return response.data;\n  }\n\n  async getSensorHistory(params: {\n    device_id?: string;\n    limit?: number;\n    offset?: number;\n    start_time?: string;\n    end_time?: string;\n  }) {\n    const response = await api.get('/sensors/history', { params });\n    return response.data;\n  }\n\n  async getSensorStats(deviceId: string, period: string = '1h') {\n    const response = await api.get(`/sensors/stats?device_id=${deviceId}&period=${period}`);\n    return response.data;\n  }\n\n  // WebSocket for live sensor streaming\n  connectToSensorStream(deviceId: string, onData: (data: SensorData) => void) {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n\n    // For now, simulate WebSocket data since the backend WebSocket might not be available\n    // In production, you would use the actual WebSocket connection\n    const simulateData = () => {\n      const mockData: SensorData = {\n        temperature: 20 + Math.random() * 10,\n        humidity: 40 + Math.random() * 20,\n        pressure: 1013 + Math.random() * 20,\n        orientation: {\n          pitch: Math.random() * 360 - 180,\n          roll: Math.random() * 360 - 180,\n          yaw: Math.random() * 360\n        },\n        acceleration: {\n          x: Math.random() * 4 - 2,\n          y: Math.random() * 4 - 2,\n          z: Math.random() * 4 - 2\n        },\n        compass: Math.random() * 360,\n        timestamp: new Date().toISOString(),\n        device_id: deviceId\n      };\n      onData(mockData);\n    };\n\n    // Simulate real-time data every 2 seconds\n    const interval = setInterval(simulateData, 2000);\n    \n    // Return a mock socket object\n    return {\n      disconnect: () => clearInterval(interval),\n      on: () => {},\n      emit: () => {}\n    } as any;\n  }\n\n  disconnectSensorStream() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  // Devices\n  async getDevices() {\n    const response = await api.get('/device/list');\n    return response.data;\n  }\n\n  async registerDevice(deviceData: any) {\n    const response = await api.post('/device/register', deviceData);\n    return response.data;\n  }\n\n  async updateDevice(deviceId: string, data: any) {\n    const response = await api.put(`/device/${deviceId}`, data);\n    return response.data;\n  }\n\n  async getDeviceStatus(deviceId: string) {\n    const response = await api.get(`/device/${deviceId}/status`);\n    return response.data;\n  }\n\n  // Network\n  async configureWifi(ssid: string, password: string, security: string = 'WPA2') {\n    const response = await api.post('/network/wifi', {\n      ssid,\n      password,\n      security,\n      auto_connect: true\n    });\n    return response.data;\n  }\n\n  async getNetworkStatus(networkInterface: string = 'wlan0') {\n    const response = await api.get(`/network/status?interface=${networkInterface}`);\n    return response.data;\n  }\n\n  async scanNetworks() {\n    const response = await api.get('/network/scan');\n    return response.data;\n  }\n\n  // Training\n  async setupTraining(config: {\n    model: string;\n    data: string;\n    mode: string;\n    epochs?: number;\n    batch_size?: number;\n    learning_rate?: number;\n    device_id?: string;\n  }) {\n    const response = await api.post('/training/training/setup', config);\n    return response.data;\n  }\n\n  async getTrainingStatus(jobId?: string): Promise<TrainingJob | { jobs: TrainingJob[] }> {\n    const url = jobId ? `/training/training/status?job_id=${jobId}` : '/training/training/status';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  async controlTraining(jobId: string, action: 'pause' | 'resume' | 'cancel') {\n    const response = await api.post(`/training/training/${jobId}/control?action=${action}`);\n    return response.data;\n  }\n\n  async getTrainedModels(deviceId?: string) {\n    const url = deviceId ? `/training/training/models?device_id=${deviceId}` : '/training/training/models';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  // Federated Learning\n  async startFederatedTraining(config: {\n    session_name: string;\n    num_rounds: number;\n    min_clients: number;\n    max_clients?: number;\n    differential_privacy?: boolean;\n    noise_multiplier?: number;\n    model_config: any;\n  }) {\n    const response = await api.post('/training/federated/train', config);\n    return response.data;\n  }\n\n  async getFederatedStatus(sessionId?: string): Promise<FederatedSession | { sessions: FederatedSession[] }> {\n    const url = sessionId ? `/training/federated/status?session_id=${sessionId}` : '/training/federated/status';\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  async joinFederatedSession(sessionId: string, deviceId: string, dataSamples: number) {\n    const response = await api.post(`/training/federated/${sessionId}/join`, null, {\n      params: {\n        device_id: deviceId,\n        data_samples: dataSamples\n      }\n    });\n    return response.data;\n  }\n\n  // Data\n  async uploadData(formData: FormData) {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  }\n\n  async downloadFile(fileId: string) {\n    const response = await api.get(`/download/${fileId}`, {\n      responseType: 'blob',\n    });\n    return response.data;\n  }\n\n  async queryData(query: string) {\n    const response = await api.post('/query', { query });\n    return response.data;\n  }\n\n  // Files\n  async syncFiles(path: string) {\n    const response = await api.post('/file/sync', { path });\n    return response.data;\n  }\n\n  async listFiles() {\n    const response = await api.get('/file/list');\n    return response.data;\n  }\n}\n\n// Export singleton instance\nexport const apiService = new ApiService();\nexport default apiService;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1071, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/app/devices/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Plus, RefreshCw, Search, Filter, X } from 'lucide-react';\nimport { toast } from 'react-toastify';\nimport DeviceCard from '../components/DeviceCard';\nimport Navigation from '../components/Navigation';\nimport apiService from '../services/api';\n\ninterface Device {\n  device_id: string;\n  name: string;\n  status: 'online' | 'offline' | 'idle';\n  battery_level?: number;\n  last_seen: string;\n  sensors_enabled: boolean;\n  hardware_info?: Record<string, any>;\n  device_name?: string;\n}\n\nconst DevicesPage = () => {\n  const [devices, setDevices] = useState<Device[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [formData, setFormData] = useState({\n    device_id: '',\n    device_name: '',\n    device_type: 'thoth',\n  });\n  const [isRegistering, setIsRegistering] = useState(false);\n\n  // Fetch devices on component mount\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n\n  const fetchDevices = async () => {\n    try {\n      setLoading(true);\n      const response = await apiService.getDevices();\n      \n      const devices = (response.data || []).map((device: any) => ({\n        device_id: device.device_id,\n        name: device.device_name || `Device-${device.device_id.slice(-4)}`,\n        status: (device.status?.toLowerCase() as 'online' | 'offline' | 'idle') || 'offline',\n        battery_level: device.status_data?.battery_level || 0,\n        last_seen: device.last_seen || new Date().toISOString(),\n        sensors_enabled: device.status_data?.sensors_enabled || false,\n        hardware_info: device.hardware_info || {},\n        device_name: device.device_name\n      }));\n      \n      setDevices(devices);\n    } catch (error) {\n      console.error('Failed to fetch devices:', error);\n      toast.error('Failed to load devices. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddDevice = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!formData.device_id) return;\n    \n    try {\n      setIsRegistering(true);\n      await apiService.registerDevice({\n        device_id: formData.device_id,\n        device_name: formData.device_name || `Device-${formData.device_id.slice(-4)}`,\n        device_type: formData.device_type,\n        hardware_info: {}\n      });\n      \n      toast.success('Device registered successfully!');\n      setShowAddModal(false);\n      setFormData({ device_id: '', device_name: '', device_type: 'thoth' });\n      fetchDevices();\n    } catch (error) {\n      console.error('Failed to register device:', error);\n      toast.error('Failed to register device. Please try again.');\n    } finally {\n      setIsRegistering(false);\n    }\n  };\n\n  const handleDeleteDevice = async (deviceId: string) => {\n    if (!confirm('Are you sure you want to delete this device?')) return;\n    \n    try {\n      await apiService.deleteDevice(deviceId);\n      toast.success('Device deleted successfully!');\n      fetchDevices();\n    } catch (error) {\n      console.error('Failed to delete device:', error);\n      toast.error('Failed to delete device. Please try again.');\n    }\n  };\n\n  const handleToggleSensors = async (deviceId: string, enabled: boolean) => {\n    try {\n      await apiService.updateDevice(deviceId, {\n        status_data: { sensors_enabled: enabled }\n      });\n      fetchDevices();\n    } catch (error) {\n      console.error('Failed to update device status:', error);\n      toast.error('Failed to update device status');\n    }\n  };\n\n  const filteredDevices = devices.filter(device => {\n    const matchesSearch = device.name.toLowerCase().includes(searchTerm.toLowerCase()) || \n                         device.device_id.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = filterStatus === 'all' || device.status === filterStatus;\n    return matchesSearch && matchesStatus;\n  });\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white\">\n      <Navigation />\n      <main className=\"container mx-auto px-4 py-8\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mb-8\"\n        >\n          <h1 className=\"text-4xl font-bold mb-2\">Thoth Devices</h1>\n          <p className=\"text-gray-400\">Manage and monitor your IoT devices</p>\n        </motion.div>\n\n        {/* Stats */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\"\n        >\n          <div className=\"bg-gray-800 p-4 rounded-lg\">\n            <p className=\"text-gray-400 text-sm\">Total Devices</p>\n            <p className=\"text-2xl font-bold\">{devices.length}</p>\n          </div>\n          <div className=\"bg-gray-800 p-4 rounded-lg\">\n            <p className=\"text-gray-400 text-sm\">Online</p>\n            <p className=\"text-2xl font-bold text-green-500\">\n              {devices.filter(d => d.status === 'online').length}\n            </p>\n          </div>\n          <div className=\"bg-gray-800 p-4 rounded-lg\">\n            <p className=\"text-gray-400 text-sm\">Active Sensors</p>\n            <p className=\"text-2xl font-bold text-blue-500\">\n              {devices.filter(d => d.sensors_enabled).length}\n            </p>\n          </div>\n          <div className=\"bg-gray-800 p-4 rounded-lg\">\n            <p className=\"text-gray-400 text-sm\">Avg Battery</p>\n            <p className=\"text-2xl font-bold text-yellow-500\">\n              {devices.length > 0 \n                ? Math.round(devices.reduce((acc, d) => acc + (d.battery_level || 0), 0) / devices.length)\n                : 0}%\n            </p>\n          </div>\n        </motion.div>\n\n        {/* Controls */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"flex flex-col md:flex-row gap-4 mb-8\"\n        >\n          <div className=\"relative flex-1\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search devices...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n          <div className=\"flex gap-2\">\n            <select\n              value={filterStatus}\n              onChange={(e) => setFilterStatus(e.target.value)}\n              className=\"px-4 py-2 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"all\">All Status</option>\n              <option value=\"online\">Online</option>\n              <option value=\"idle\">Idle</option>\n              <option value=\"offline\">Offline</option>\n            </select>\n            <button\n              onClick={fetchDevices}\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg flex items-center gap-2\"\n              disabled={loading}\n            >\n              <RefreshCw className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />\n              Refresh\n            </button>\n            <button\n              onClick={() => setShowAddModal(true)}\n              className=\"px-4 py-2 bg-green-600 hover:bg-green-700 rounded-lg flex items-center gap-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              Add Device\n            </button>\n          </div>\n        </motion.div>\n\n        {/* Device Grid */}\n        {loading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n          </div>\n        ) : (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\"\n          >\n            {filteredDevices.map((device, index) => (\n              <motion.div\n                key={device.device_id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.05 }}\n              >\n                <DeviceCard\n                  device={device}\n                  onToggleSensors={(deviceId) => handleToggleSensors(deviceId, !device.sensors_enabled)}\n                  onDelete={handleDeleteDevice}\n                />\n              </motion.div>\n            ))}\n          </motion.div>\n        )}\n\n        {filteredDevices.length === 0 && !loading && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"text-center py-12\"\n          >\n            <p className=\"text-gray-400 text-lg\">No devices found</p>\n            <p className=\"text-gray-500 text-sm mt-2\">Try adjusting your search or add a new device</p>\n          </motion.div>\n        )}\n      </main>\n\n      {/* Add Device Modal */}\n      {showAddModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <motion.div\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            className=\"bg-gray-800 rounded-xl p-6 w-full max-w-md\"\n          >\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-xl font-semibold\">Add New Device</h3>\n              <button\n                onClick={() => setShowAddModal(false)}\n                className=\"text-gray-400 hover:text-white\"\n                disabled={isRegistering}\n              >\n                <X className=\"w-6 h-6\" />\n              </button>\n            </div>\n            \n            <form onSubmit={handleAddDevice}>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                    Device ID *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.device_id}\n                    onChange={(e) => setFormData({...formData, device_id: e.target.value})}\n                    className=\"w-full px-4 py-2 bg-gray-700 text-white rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n                    placeholder=\"Enter device ID\"\n                    required\n                    disabled={isRegistering}\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                    Device Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.device_name}\n                    onChange={(e) => setFormData({...formData, device_name: e.target.value})}\n                    className=\"w-full px-4 py-2 bg-gray-700 text-white rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n                    placeholder=\"Enter a friendly name\"\n                    disabled={isRegistering}\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                    Device Type\n                  </label>\n                  <select\n                    value={formData.device_type}\n                    onChange={(e) => setFormData({...formData, device_type: e.target.value})}\n                    className=\"w-full px-4 py-2 bg-gray-700 text-white rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n                    disabled={isRegistering}\n                  >\n                    <option value=\"thoth\">Thoth Device</option>\n                    <option value=\"raspberrypi\">Raspberry Pi</option>\n                    <option value=\"arduino\">Arduino</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n                \n                <div className=\"flex justify-end gap-3 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowAddModal(false)}\n                    className=\"px-4 py-2 text-sm font-medium text-gray-300 hover:text-white\"\n                    disabled={isRegistering}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={isRegistering || !formData.device_id.trim()}\n                    className=\"px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 flex items-center gap-2\"\n                  >\n                    {isRegistering ? (\n                      <>\n                        <RefreshCw className=\"animate-spin w-4 h-4\" />\n                        Registering...\n                      </>\n                    ) : (\n                      'Register Device'\n                    )}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </motion.div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DevicesPage;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;AAqBA,MAAM,cAAc;IAClB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,WAAW;QACX,aAAa;QACb,aAAa;IACf;IACA,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,mCAAmC;IACnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,eAAe;QACnB,IAAI;YACF,WAAW;YACX,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAU,CAAC,UAAU;YAE5C,MAAM,UAAU,CAAC,SAAS,IAAI,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,SAAgB,CAAC;oBAC1D,WAAW,OAAO,SAAS;oBAC3B,MAAM,OAAO,WAAW,IAAI,CAAC,OAAO,EAAE,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI;oBAClE,QAAQ,AAAC,OAAO,MAAM,EAAE,iBAAmD;oBAC3E,eAAe,OAAO,WAAW,EAAE,iBAAiB;oBACpD,WAAW,OAAO,SAAS,IAAI,IAAI,OAAO,WAAW;oBACrD,iBAAiB,OAAO,WAAW,EAAE,mBAAmB;oBACxD,eAAe,OAAO,aAAa,IAAI,CAAC;oBACxC,aAAa,OAAO,WAAW;gBACjC,CAAC;YAED,WAAW;QACb,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,mJAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,kBAAkB,OAAO;QAC7B,EAAE,cAAc;QAChB,IAAI,CAAC,SAAS,SAAS,EAAE;QAEzB,IAAI;YACF,iBAAiB;YACjB,MAAM,sHAAA,CAAA,UAAU,CAAC,cAAc,CAAC;gBAC9B,WAAW,SAAS,SAAS;gBAC7B,aAAa,SAAS,WAAW,IAAI,CAAC,OAAO,EAAE,SAAS,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI;gBAC7E,aAAa,SAAS,WAAW;gBACjC,eAAe,CAAC;YAClB;YAEA,mJAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd,gBAAgB;YAChB,YAAY;gBAAE,WAAW;gBAAI,aAAa;gBAAI,aAAa;YAAQ;YACnE;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,mJAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd,SAAU;YACR,iBAAiB;QACnB;IACF;IAEA,MAAM,qBAAqB,OAAO;QAChC,IAAI,CAAC,QAAQ,iDAAiD;QAE9D,IAAI;YACF,MAAM,sHAAA,CAAA,UAAU,CAAC,YAAY,CAAC;YAC9B,mJAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,mJAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,MAAM,sBAAsB,OAAO,UAAkB;QACnD,IAAI;YACF,MAAM,sHAAA,CAAA,UAAU,CAAC,YAAY,CAAC,UAAU;gBACtC,aAAa;oBAAE,iBAAiB;gBAAQ;YAC1C;YACA;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mCAAmC;YACjD,mJAAA,CAAA,QAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,MAAM,kBAAkB,QAAQ,MAAM,CAAC,CAAA;QACrC,MAAM,gBAAgB,OAAO,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OAC1D,OAAO,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;QACnF,MAAM,gBAAgB,iBAAiB,SAAS,OAAO,MAAM,KAAK;QAClE,OAAO,iBAAiB;IAC1B;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,gIAAA,CAAA,UAAU;;;;;0BACX,8OAAC;gBAAK,WAAU;;kCAEd,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,GAAG,CAAC;wBAAG;wBAC9B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,WAAU;;0CAEV,8OAAC;gCAAG,WAAU;0CAA0B;;;;;;0CACxC,8OAAC;gCAAE,WAAU;0CAAgB;;;;;;;;;;;;kCAI/B,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,WAAU;;0CAEV,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,8OAAC;wCAAE,WAAU;kDAAsB,QAAQ,MAAM;;;;;;;;;;;;0CAEnD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,8OAAC;wCAAE,WAAU;kDACV,QAAQ,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,UAAU,MAAM;;;;;;;;;;;;0CAGtD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,8OAAC;wCAAE,WAAU;kDACV,QAAQ,MAAM,CAAC,CAAA,IAAK,EAAE,eAAe,EAAE,MAAM;;;;;;;;;;;;0CAGlD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,8OAAC;wCAAE,WAAU;;4CACV,QAAQ,MAAM,GAAG,IACd,KAAK,KAAK,CAAC,QAAQ,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,CAAC,EAAE,aAAa,IAAI,CAAC,GAAG,KAAK,QAAQ,MAAM,IACvF;4CAAE;;;;;;;;;;;;;;;;;;;kCAMZ,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,WAAU;;0CAEV,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,sMAAA,CAAA,SAAM;wCAAC,WAAU;;;;;;kDAClB,8OAAC;wCACC,MAAK;wCACL,aAAY;wCACZ,OAAO;wCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;wCAC7C,WAAU;;;;;;;;;;;;0CAGd,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;wCAC/C,WAAU;;0DAEV,8OAAC;gDAAO,OAAM;0DAAM;;;;;;0DACpB,8OAAC;gDAAO,OAAM;0DAAS;;;;;;0DACvB,8OAAC;gDAAO,OAAM;0DAAO;;;;;;0DACrB,8OAAC;gDAAO,OAAM;0DAAU;;;;;;;;;;;;kDAE1B,8OAAC;wCACC,SAAS;wCACT,WAAU;wCACV,UAAU;;0DAEV,8OAAC,gNAAA,CAAA,YAAS;gDAAC,WAAW,CAAC,QAAQ,EAAE,UAAU,iBAAiB,IAAI;;;;;;4CAAI;;;;;;;kDAGtE,8OAAC;wCACC,SAAS,IAAM,gBAAgB;wCAC/B,WAAU;;0DAEV,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;4CAAY;;;;;;;;;;;;;;;;;;;oBAOjC,wBACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;;;;;;;;;6CAGjB,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;wBAAE;wBACtB,SAAS;4BAAE,SAAS;wBAAE;wBACtB,WAAU;kCAET,gBAAgB,GAAG,CAAC,CAAC,QAAQ,sBAC5B,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;gCAET,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAG;gCAC7B,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAE;gCAC5B,YAAY;oCAAE,OAAO,QAAQ;gCAAK;0CAElC,cAAA,8OAAC,gIAAA,CAAA,UAAU;oCACT,QAAQ;oCACR,iBAAiB,CAAC,WAAa,oBAAoB,UAAU,CAAC,OAAO,eAAe;oCACpF,UAAU;;;;;;+BARP,OAAO,SAAS;;;;;;;;;;oBAe5B,gBAAgB,MAAM,KAAK,KAAK,CAAC,yBAChC,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;wBAAE;wBACtB,SAAS;4BAAE,SAAS;wBAAE;wBACtB,WAAU;;0CAEV,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;0CACrC,8OAAC;gCAAE,WAAU;0CAA6B;;;;;;;;;;;;;;;;;;YAM/C,8BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,0KAAA,CAAA,SAAM,CAAC,GAAG;oBACT,SAAS;wBAAE,SAAS;wBAAG,OAAO;oBAAI;oBAClC,SAAS;wBAAE,SAAS;wBAAG,OAAO;oBAAE;oBAChC,WAAU;;sCAEV,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAwB;;;;;;8CACtC,8OAAC;oCACC,SAAS,IAAM,gBAAgB;oCAC/B,WAAU;oCACV,UAAU;8CAEV,cAAA,8OAAC,4LAAA,CAAA,IAAC;wCAAC,WAAU;;;;;;;;;;;;;;;;;sCAIjB,8OAAC;4BAAK,UAAU;sCACd,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAGhE,8OAAC;gDACC,MAAK;gDACL,OAAO,SAAS,SAAS;gDACzB,UAAU,CAAC,IAAM,YAAY;wDAAC,GAAG,QAAQ;wDAAE,WAAW,EAAE,MAAM,CAAC,KAAK;oDAAA;gDACpE,WAAU;gDACV,aAAY;gDACZ,QAAQ;gDACR,UAAU;;;;;;;;;;;;kDAId,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAGhE,8OAAC;gDACC,MAAK;gDACL,OAAO,SAAS,WAAW;gDAC3B,UAAU,CAAC,IAAM,YAAY;wDAAC,GAAG,QAAQ;wDAAE,aAAa,EAAE,MAAM,CAAC,KAAK;oDAAA;gDACtE,WAAU;gDACV,aAAY;gDACZ,UAAU;;;;;;;;;;;;kDAId,8OAAC;;0DACC,8OAAC;gDAAM,WAAU;0DAA+C;;;;;;0DAGhE,8OAAC;gDACC,OAAO,SAAS,WAAW;gDAC3B,UAAU,CAAC,IAAM,YAAY;wDAAC,GAAG,QAAQ;wDAAE,aAAa,EAAE,MAAM,CAAC,KAAK;oDAAA;gDACtE,WAAU;gDACV,UAAU;;kEAEV,8OAAC;wDAAO,OAAM;kEAAQ;;;;;;kEACtB,8OAAC;wDAAO,OAAM;kEAAc;;;;;;kEAC5B,8OAAC;wDAAO,OAAM;kEAAU;;;;;;kEACxB,8OAAC;wDAAO,OAAM;kEAAQ;;;;;;;;;;;;;;;;;;kDAI1B,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDACC,MAAK;gDACL,SAAS,IAAM,gBAAgB;gDAC/B,WAAU;gDACV,UAAU;0DACX;;;;;;0DAGD,8OAAC;gDACC,MAAK;gDACL,UAAU,iBAAiB,CAAC,SAAS,SAAS,CAAC,IAAI;gDACnD,WAAU;0DAET,8BACC;;sEACE,8OAAC,gNAAA,CAAA,YAAS;4DAAC,WAAU;;;;;;wDAAyB;;mEAIhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWtB;uCAEe","debugId":null}}]
}