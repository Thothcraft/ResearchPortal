{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/components/ChatBubble.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { MessageSquare, X } from 'lucide-react';\n\nexport default function ChatBubble() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState<{text: string; isUser: boolean}[]>([]);\n\n  const handleSendMessage = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!message.trim()) return;\n    \n    // Add user message\n    setMessages(prev => [...prev, { text: message, isUser: true }]);\n    setMessage('');\n    \n    // Simulate bot response\n    setTimeout(() => {\n      setMessages(prev => [...prev, { \n        text: 'Thanks for your message! A team member will get back to you soon.', \n        isUser: false \n      }]);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"fixed bottom-6 right-6 z-50 flex flex-col items-end space-y-2\">\n      {isOpen && (\n        <div className=\"w-80 bg-white rounded-lg shadow-xl overflow-hidden flex flex-col h-[500px]\">\n          <div className=\"bg-indigo-600 text-white p-4 flex justify-between items-center\">\n            <h3 className=\"font-semibold\">Support Chat</h3>\n            <button \n              onClick={() => setIsOpen(false)}\n              className=\"text-white hover:text-gray-200\"\n            >\n              <X size={20} />\n            </button>\n          </div>\n          \n          <div className=\"flex-1 p-4 overflow-y-auto bg-gray-50\">\n            <div className=\"space-y-4\">\n              <div className=\"flex justify-start\">\n                <div className=\"bg-indigo-100 text-gray-800 rounded-lg p-3 max-w-[80%]\">\n                  <p>Hello! How can I help you today?</p>\n                </div>\n              </div>\n              \n              {messages.map((msg, index) => (\n                <div \n                  key={index} \n                  className={`flex ${msg.isUser ? 'justify-end' : 'justify-start'}`}\n                >\n                  <div \n                    className={`rounded-lg p-3 max-w-[80%] ${\n                      msg.isUser \n                        ? 'bg-indigo-600 text-white' \n                        : 'bg-indigo-100 text-gray-800'\n                    }`}\n                  >\n                    <p>{msg.text}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          <form onSubmit={handleSendMessage} className=\"p-4 border-t border-gray-200\">\n            <div className=\"flex space-x-2\">\n              <input\n                type=\"text\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                placeholder=\"Type your message...\"\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n              />\n              <button\n                type=\"submit\"\n                className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n              >\n                Send\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n      \n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"w-14 h-14 bg-indigo-600 rounded-full flex items-center justify-center text-white shadow-lg hover:bg-indigo-700 transition-colors\"\n        aria-label=\"Open chat\"\n      >\n        {isOpen ? <X size={24} /> : <MessageSquare size={24} />}\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqC,EAAE;IAE9E,MAAM,oBAAoB,CAAC;QACzB,EAAE,cAAc;QAChB,IAAI,CAAC,QAAQ,IAAI,IAAI;QAErB,mBAAmB;QACnB,YAAY,CAAA,OAAQ;mBAAI;gBAAM;oBAAE,MAAM;oBAAS,QAAQ;gBAAK;aAAE;QAC9D,WAAW;QAEX,wBAAwB;QACxB,WAAW;YACT,YAAY,CAAA,OAAQ;uBAAI;oBAAM;wBAC5B,MAAM;wBACN,QAAQ;oBACV;iBAAE;QACJ,GAAG;IACL;IAEA,qBACE,8OAAC;QAAI,WAAU;;YACZ,wBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAgB;;;;;;0CAC9B,8OAAC;gCACC,SAAS,IAAM,UAAU;gCACzB,WAAU;0CAEV,cAAA,8OAAC,4LAAA,CAAA,IAAC;oCAAC,MAAM;;;;;;;;;;;;;;;;;kCAIb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;sDAAE;;;;;;;;;;;;;;;;gCAIN,SAAS,GAAG,CAAC,CAAC,KAAK,sBAClB,8OAAC;wCAEC,WAAW,CAAC,KAAK,EAAE,IAAI,MAAM,GAAG,gBAAgB,iBAAiB;kDAEjE,cAAA,8OAAC;4CACC,WAAW,CAAC,2BAA2B,EACrC,IAAI,MAAM,GACN,6BACA,+BACJ;sDAEF,cAAA,8OAAC;0DAAG,IAAI,IAAI;;;;;;;;;;;uCAVT;;;;;;;;;;;;;;;;kCAiBb,8OAAC;wBAAK,UAAU;wBAAmB,WAAU;kCAC3C,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;oCAC1C,aAAY;oCACZ,WAAU;;;;;;8CAEZ,8OAAC;oCACC,MAAK;oCACL,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;0BAQT,8OAAC;gBACC,SAAS,IAAM,UAAU,CAAC;gBAC1B,WAAU;gBACV,cAAW;0BAEV,uBAAS,8OAAC,4LAAA,CAAA,IAAC;oBAAC,MAAM;;;;;yCAAS,8OAAC,wNAAA,CAAA,gBAAa;oBAAC,MAAM;;;;;;;;;;;;;;;;;AAIzD","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/ResearchPortal/providers.tsx"],"sourcesContent":["'use client';\n\nimport { AuthProvider } from './contexts/AuthContext';\nimport ChatBubble from './components/ChatBubble';\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return (\n    <AuthProvider>\n      {children}\n      <ChatBubble />\n    </AuthProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBACE,8OAAC,wHAAA,CAAA,eAAY;;YACV;0BACD,8OAAC,yHAAA,CAAA,UAAU;;;;;;;;;;;AAGjB","debugId":null}}]
}